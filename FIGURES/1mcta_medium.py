import cPickle, base64
try:
	from SimpleSession.versions.v65 import beginRestore,\
	    registerAfterModelsCB, reportRestoreError, checkVersion
except ImportError:
	from chimera import UserError
	raise UserError('Cannot open session that was saved in a'
	    ' newer version of Chimera; update your version')
checkVersion([1, 11, 2, 41376])
import chimera
from chimera import replyobj
replyobj.status('Restoring session...', \
    blankAfter=0)
replyobj.status('Beginning session restore...', \
    blankAfter=0, secondary=True)
beginRestore()

def restoreCoreModels():
	from SimpleSession.versions.v65 import init, restoreViewer, \
	     restoreMolecules, restoreColors, restoreSurfaces, \
	     restoreVRML, restorePseudoBondGroups, restoreModelAssociations
	molInfo = cPickle.loads(base64.b64decode('gAJ9cQEoVRFyaWJib25JbnNpZGVDb2xvcnECSwFOfYdVCWJhbGxTY2FsZXEDSwFHP9AAAAAAAAB9h1UJcG9pbnRTaXplcQRLAUc/8AAAAAAAAH2HVQVjb2xvcnEFSwFLAH2HVQpyaWJib25UeXBlcQZLAUsAfYdVCnN0aWNrU2NhbGVxB0sBRz/wAAAAAAAAfYdVDG1tQ0lGSGVhZGVyc3EIXXEJTmFVDGFyb21hdGljTW9kZXEKSwFLAX2HVQp2ZHdEZW5zaXR5cQtLAUdAFAAAAAAAAH2HVQZoaWRkZW5xDEsBiX2HVQ1hcm9tYXRpY0NvbG9ycQ1LAU59h1UPcmliYm9uU21vb3RoaW5ncQ5LAUsAfYdVCWF1dG9jaGFpbnEPSwGIfYdVCnBkYlZlcnNpb25xEEsBSwJ9h1UIb3B0aW9uYWxxEX1xElUIb3BlbmVkQXNxE4iJSwEoWIQAAABDOlxVc2Vyc1xNYXLDrWEgTGF1cmFcRGVza3RvcFxWYXJpYWJpbGlkYWRFc3RydWN0dXJhbFByb3RlaWNhXFZhcmlhYmlsaWRhZEVzdHJ1Y3R1cmFsUHJvdGVpY2FcT1VUXG91dF9zdWJzZXRfQ01fQU5NXDFtY3RhX21lZGl1bS5wZGJxFFUDUERCcRVOiXRxFn2Hh3NVD2xvd2VyQ2FzZUNoYWluc3EXSwGJfYdVCWxpbmVXaWR0aHEYSwFHP/AAAAAAAAB9h1UPcmVzaWR1ZUxhYmVsUG9zcRlLAUsAfYdVBG5hbWVxGksBWBAAAAAxbWN0YV9tZWRpdW0ucGRifYdVD2Fyb21hdGljRGlzcGxheXEbSwGJfYdVD3JpYmJvblN0aWZmbmVzc3EcSwFHP+mZmZmZmZp9h1UKcGRiSGVhZGVyc3EdXXEefXEfYVUDaWRzcSBLAUsASwCGfYdVDnN1cmZhY2VPcGFjaXR5cSFLAUe/8AAAAAAAAH2HVRBhcm9tYXRpY0xpbmVUeXBlcSJLAUsCfYdVFHJpYmJvbkhpZGVzTWFpbmNoYWlucSNLAYh9h1UHZGlzcGxheXEkSwGIfYd1Lg=='))
	resInfo = cPickle.loads(base64.b64decode('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'))
	atomInfo = cPickle.loads(base64.b64decode(''))
	bondInfo = cPickle.loads(base64.b64decode('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'))
	crdInfo = cPickle.loads(base64.b64decode(''))
	surfInfo = {'category': (0, None, {}), 'probeRadius': (0, None, {}), 'pointSize': (0, None, {}), 'name': [], 'density': (0, None, {}), 'colorMode': (0, None, {}), 'useLighting': (0, None, {}), 'transparencyBlendMode': (0, None, {}), 'molecule': [], 'smoothLines': (0, None, {}), 'lineWidth': (0, None, {}), 'allComponents': (0, None, {}), 'twoSidedLighting': (0, None, {}), 'customVisibility': [], 'drawMode': (0, None, {}), 'display': (0, None, {}), 'customColors': []}
	vrmlInfo = {'subid': (0, None, {}), 'display': (0, None, {}), 'id': (0, None, {}), 'vrmlString': [], 'name': (0, None, {})}
	colors = {'Ru': ((0.141176, 0.560784, 0.560784), 1, u'default'), 'Re': ((0.14902, 0.490196, 0.670588), 1, u'default'), 'Rf': ((0.8, 0, 0.34902), 1, u'default'), 'Ra': ((0, 0.490196, 0), 1, u'default'), 'slate gray': ((0.439216, 0.501961, 0.564706), 1, u'default'), 'Rn': ((0.258824, 0.509804, 0.588235), 1, u'default'), 'Rh': ((0.0392157, 0.490196, 0.54902), 1, u'default'), 'Be': ((0.760784, 1, 0), 1, u'default'), 'Ba': ((0, 0.788235, 0), 1, u'default'), 'Bh': ((0.878431, 0, 0.219608), 1, u'default'), 'Bi': ((0.619608, 0.309804, 0.709804), 1, u'default'), 'Bk': ((0.541176, 0.309804, 0.890196), 1, u'default'), 'Br': ((0.65098, 0.160784, 0.160784), 1, u'default'), 'H': ((1, 1, 1), 1, u'default'), 'P': ((1, 0.501961, 0), 1, u'default'), 'Os': ((0.14902, 0.4, 0.588235), 1, u'default'), 'Ge': ((0.4, 0.560784, 0.560784), 1, u'default'), 'Gd': ((0.270588, 1, 0.780392), 1, u'default'), 'Ga': ((0.760784, 0.560784, 0.560784), 1, u'default'), 'Pr': ((0.85098, 1, 0.780392), 1, u'default'), 'Rb': ((0.439216, 0.180392, 0.690196), 1, u'default'), 'Pt': ((0.815686, 0.815686, 0.878431), 1, u'default'),
'Pu': ((0, 0.419608, 1), 1, u'default'), 'C': ((0.564706, 0.564706, 0.564706), 1, u'default'), 'Pb': ((0.341176, 0.34902, 0.380392), 1, u'default'), 'Pa': ((0, 0.631373, 1), 1, u'default'), 'Pd': ((0, 0.411765, 0.521569), 1, u'default'), 'Cd': ((1, 0.85098, 0.560784), 1, u'default'), 'Po': ((0.670588, 0.360784, 0), 1, u'default'), 'Pm': ((0.639216, 1, 0.780392), 1, u'default'), 'Hs': ((0.901961, 0, 0.180392), 1, u'default'), 'Ho': ((0, 1, 0.611765), 1, u'default'), 'Hf': ((0.301961, 0.760784, 1), 1, u'default'), 'Hg': ((0.721569, 0.721569, 0.815686), 1, u'default'), 'He': ((0.85098, 1, 1), 1, u'default'), 'Md': ((0.701961, 0.0509804, 0.65098), 1, u'default'), 'Mg': ((0.541176, 1, 0), 1, u'default'), 'K': ((0.560784, 0.25098, 0.831373), 1, u'default'), 'Mn': ((0.611765, 0.478431, 0.780392), 1, u'default'), 'O': ((1, 0.0509804, 0.0509804), 1, u'default'), 'Mt': ((0.921569, 0, 0.14902), 1, u'default'), 'S': ((1, 1, 0.188235), 1, u'default'), 'W': ((0.129412, 0.580392, 0.839216), 1, u'default'), 'Zn': ((0.490196, 0.501961, 0.690196), 1, u'default'), 'Eu': ((0.380392, 1, 0.780392), 1, u'default'),
'Zr': ((0.580392, 0.878431, 0.878431), 1, u'default'), 'Er': ((0, 0.901961, 0.458824), 1, u'default'), 'Ni': ((0.313725, 0.815686, 0.313725), 1, u'default'), 'No': ((0.741176, 0.0509804, 0.529412), 1, u'default'), 'Na': ((0.670588, 0.360784, 0.94902), 1, u'default'), 'Nb': ((0.45098, 0.760784, 0.788235), 1, u'default'), 'Nd': ((0.780392, 1, 0.780392), 1, u'default'), 'Ne': ((0.701961, 0.890196, 0.960784), 1, u'default'), 'Np': ((0, 0.501961, 1), 1, u'default'), 'Fr': ((0.258824, 0, 0.4), 1, u'default'), 'Fe': ((0.878431, 0.4, 0.2), 1, u'default'), 'Fm': ((0.701961, 0.121569, 0.729412), 1, u'default'), 'B': ((1, 0.709804, 0.709804), 1, u'default'), 'F': ((0.564706, 0.878431, 0.313725), 1, u'default'), 'Sr': ((0, 1, 0), 1, u'default'), 'N': ((0.188235, 0.313725, 0.972549), 1, u'default'), 'Kr': ((0.360784, 0.721569, 0.819608), 1, u'default'), 'Si': ((0.941176, 0.784314, 0.627451), 1, u'default'), 'Sn': ((0.4, 0.501961, 0.501961), 1, u'default'), 'Sm': ((0.560784, 1, 0.780392), 1, u'default'), 'V': ((0.65098, 0.65098, 0.670588), 1, u'default'), 'Sc': ((0.901961, 0.901961, 0.901961), 1, u'default'),
'Sb': ((0.619608, 0.388235, 0.709804), 1, u'default'), 'Sg': ((0.85098, 0, 0.270588), 1, u'default'), 'Se': ((1, 0.631373, 0), 1, u'default'), 'Co': ((0.941176, 0.564706, 0.627451), 1, u'default'), 'Cm': ((0.470588, 0.360784, 0.890196), 1, u'default'), 'Cl': ((0.121569, 0.941176, 0.121569), 1, u'default'), 'Ca': ((0.239216, 1, 0), 1, u'default'), 'Cf': ((0.631373, 0.211765, 0.831373), 1, u'default'), 'Ce': ((1, 1, 0.780392), 1, u'default'), 'Xe': ((0.258824, 0.619608, 0.690196), 1, u'default'), 'Tm': ((0, 0.831373, 0.321569), 1, u'default'), 'Cs': ((0.341176, 0.0901961, 0.560784), 1, u'default'), 'Cr': ((0.541176, 0.6, 0.780392), 1, u'default'), 'Cu': ((0.784314, 0.501961, 0.2), 1, u'default'), 'La': ((0.439216, 0.831373, 1), 1, u'default'), 'Li': ((0.8, 0.501961, 1), 1, u'default'), 'Tl': ((0.65098, 0.329412, 0.301961), 1, u'default'), 'Lu': ((0, 0.670588, 0.141176), 1, u'default'), 'Lr': ((0.780392, 0, 0.4), 1, u'default'), 'Th': ((0, 0.729412, 1), 1, u'default'), 'Ti': ((0.74902, 0.760784, 0.780392), 1, u'default'), 'tan': ((0.823529, 0.705882, 0.54902), 1, u'default'),
'Te': ((0.831373, 0.478431, 0), 1, u'default'), 'Tb': ((0.188235, 1, 0.780392), 1, u'default'), 'Tc': ((0.231373, 0.619608, 0.619608), 1, u'default'), 'Ta': ((0.301961, 0.65098, 1), 1, u'default'), 'pink': ((1, 0.752941, 0.796078), 1, u'default'), 'Yb': ((0, 0.74902, 0.219608), 1, u'default'), 'Db': ((0.819608, 0, 0.309804), 1, u'default'), 'Dy': ((0.121569, 1, 0.780392), 1, u'default'), 'At': ((0.458824, 0.309804, 0.270588), 1, u'default'), 'I': ((0.580392, 0, 0.580392), 1, u'default'), 'U': ((0, 0.560784, 1), 1, u'default'), 'Y': ((0.580392, 1, 1), 1, u'default'), 'Ac': ((0.439216, 0.670588, 0.980392), 1, u'default'), 'Ag': ((0.752941, 0.752941, 0.752941), 1, u'default'), 'Ir': ((0.0901961, 0.329412, 0.529412), 1, u'default'), 'Am': ((0.329412, 0.360784, 0.94902), 1, u'default'), 'Al': ((0.74902, 0.65098, 0.65098), 1, u'default'), 'As': ((0.741176, 0.501961, 0.890196), 1, u'default'), 'Ar': ((0.501961, 0.819608, 0.890196), 1, u'default'), 'Au': ((1, 0.819608, 0.137255), 1, u'default'), 'Es': ((0.701961, 0.121569, 0.831373), 1, u'default'), 'In': ((0.65098, 0.458824, 0.45098), 1, u'default'),
'Mo': ((0.329412, 0.709804, 0.709804), 1, u'default')}
	materials = {u'default': ((0.85, 0.85, 0.85), 30)}
	pbInfo = {'category': [u'distance monitor'], 'bondInfo': [{'color': (0, None, {}), 'atoms': [], 'label': (0, None, {}), 'halfbond': (0, None, {}), 'labelColor': (0, None, {}), 'labelOffset': (0, None, {}), 'drawMode': (0, None, {}), 'display': (0, None, {})}], 'lineType': (1, 2, {}), 'color': (1, 42, {}), 'optional': {'fixedLabels': (True, False, (1, False, {}))}, 'display': (1, True, {}), 'showStubBonds': (1, False, {}), 'lineWidth': (1, 1, {}), 'stickScale': (1, 1, {}), 'id': [-2]}
	modelAssociations = {}
	colorInfo = (132, (u'', (0.654867, 0.654867, 1, 1)), {(u'', (0.129793, 0.129793, 1, 1)): [113], (u'', (1, 0.985251, 0.985251, 1)): [49], (u'', (1, 0.0707964, 0.0707964, 1)): [126], (u'', (0.436578, 0.436578, 1, 1)): [59], (u'', (0.542773, 0.542773, 1, 1)): [116], (u'', (0.224189, 0.224189, 1, 1)): [33], (u'', (0.353982, 0.353982, 1, 1)): [68], (u'', (0.908555, 0.908555, 1, 1)): [80], (u'', (0.0648967, 0.0648967, 1, 1)): [24], (u'', (0.389381, 0.389381, 1, 1)): [35], (u'', (0.330383, 0.330383, 1, 1)): [12], (u'', (0.147493, 0.147493, 1, 1)): [1], (u'', (1, 0.672566, 0.672566, 1)): [19], (u'', (0.324484, 0.324484, 1, 1)): [18], (u'', (0.79056, 0.79056, 1, 1)): [97], (u'', (0.625369, 0.625369, 1, 1)): [90], (u'', (0.79646, 0.79646, 1, 1)): [9], (u'', (0.318584, 0.318584, 1, 1)): [41], (u'', (0.525074, 0.525074, 1, 1)): [61], (u'', (0.560472, 0.560472, 1, 1)): [34], (u'', (0.39528, 0.39528, 1, 1)): [60], (u'green', (0, 1, 0, 1)): [131], (u'', (1, 0.731563, 0.731563, 1)): [98], (u'', (0.0412979, 0.0412979, 1, 1)): [23], (u'', (0.932153, 0.932153, 1, 1)): [119], (u'', (0.737463, 0.737463, 1, 1)): [11], (u'', (0.171091, 0.171091, 1, 1)): [25],
(u'', (0.696165, 0.696165, 1, 1)): [72], (u'', (0.743363, 0.743363, 1, 1)): [118], (u'', (0.749263, 0.749263, 1, 1)): [82], (u'', (0.218289, 0.218289, 1, 1)): [67], (u'', (1, 0.696165, 0.696165, 1)): [64], (u'', (0.342183, 0.342183, 1, 1)): [91], (u'', (1, 0, 0, 1)): [88], (u'', (0.253687, 0.253687, 1, 1)): [16], (u'tan', (0.823529, 0.705882, 0.54902, 1)): [0], (u'', (0.483776, 0.483776, 1, 1)): [53], (u'', (0.141593, 0.141593, 1, 1)): [104], (u'', (0.336283, 0.336283, 1, 1)): [27], (u'', (0.40708, 0.40708, 1, 1)): [40], (u'', (1, 0.99705, 0.99705, 1)): [48], (u'', (1, 0.625369, 0.625369, 1)): [123], (u'', (0.873156, 0.873156, 1, 1)): [62], (u'black', (0, 0, 0, 1)): [127], (u'', (0.578171, 0.578171, 1, 1)): [79], (u'', (0.489676, 0.489676, 1, 1)): [63], (u'', (0.19469, 0.19469, 1, 1)): [102], (u'', (0.0707964, 0.0707964, 1, 1)): [107], (u'', (0.448378, 0.448378, 1, 1)): [54], (u'', (0.359882, 0.359882, 1, 1)): [56], (u'', (1, 0.389381, 0.389381, 1)): [124], (u'', (0.477876, 0.477876, 1, 1)): [81], (u'', (0.460177, 0.460177, 1, 1)): [29], (u'', (1, 0.879056, 0.879056, 1)): [122],
(u'', (0.643068, 0.643068, 1, 1)): [70], (u'', (0.59587, 0.59587, 1, 1)): [44], (u'', (0.843658, 0.843658, 1, 1)): [8], (u'', (0.566372, 0.566372, 1, 1)): [37], (u'', (1, 0.855457, 0.855457, 1)): [47], (u'', (0.719764, 0.719764, 1, 1)): [83], (u'', (0.548673, 0.548673, 1, 1)): [77], (u'', (0.312684, 0.312684, 1, 1)): [57], (u'', (0.265487, 0.265487, 1, 1)): [3], (u'', (0.507375, 0.507375, 1, 1)): [45], (u'', (0.707965, 0.707965, 1, 1)): [46], (u'', (0.702065, 0.702065, 1, 1)): [38], (u'', (0.584071, 0.584071, 1, 1)): [36], (u'', (0.536873, 0.536873, 1, 1)): [7], (u'', (0.365782, 0.365782, 1, 1)): [55], (u'', (0.855457, 0.855457, 1, 1)): [95], (u'', (0.755162, 0.755162, 1, 1)): [10], (u'', (0.300885, 0.300885, 1, 1)): [26], (u'', (0.678466, 0.678466, 1, 1)): [66], (u'', (0.259587, 0.259587, 1, 1)): [103], (u'', (0.495575, 0.495575, 1, 1)): [28], (u'', (0.554572, 0.554572, 1, 1)): [52], (u'', (0.283186, 0.283186, 1, 1)): [4], (u'', (0.424779, 0.424779, 1, 1)): [101], (u'', (1, 0.914454, 0.914454, 1)): [108], (u'', (0.454277, 0.454277, 1, 1)): [6], (u'', (0.100295, 0.100295, 1, 1)): [105],
(u'', (0.820059, 0.820059, 1, 1)): [50], (u'', (0.153392, 0.153392, 1, 1)): [115], (u'', (1, 0.377581, 0.377581, 1)): [125], (u'', (1, 0.902655, 0.902655, 1)): [89], (u'', (0.519174, 0.519174, 1, 1)): [76], (u'', (0.247788, 0.247788, 1, 1)): [15], (u'', (0.418879, 0.418879, 1, 1)): [86], (u'', (0.466077, 0.466077, 1, 1)): [78], (u'', (0.501475, 0.501475, 1, 1)): [30], (u'', (0.294985, 0.294985, 1, 1)): [84], (u'', (0.241888, 0.241888, 1, 1)): [109], (u'', (0.188791, 0.188791, 1, 1)): [85], (u'', (0.377581, 0.377581, 1, 1)): [69], (u'', (0.849558, 0.849558, 1, 1)): [51], (u'', (0.631268, 0.631268, 1, 1)): [117], (u'', (0.920354, 0.920354, 1, 1)): [99], (u'', (1, 0.961652, 0.961652, 1)): [20], (u'', (0.230088, 0.230088, 1, 1)): [13], (u'', (1, 0.926254, 0.926254, 1)): [75], (u'', (0.713864, 0.713864, 1, 1)): [73], (u'', (0.212389, 0.212389, 1, 1)): [31], (u'', (0.182891, 0.182891, 1, 1)): [110], (u'', (1, 0.19469, 0.19469, 1)): [87], (u'', (0.513274, 0.513274, 1, 1)): [21], (u'', (0.165192, 0.165192, 1, 1)): [14], (u'', (0.271386, 0.271386, 1, 1)): [100], (u'', (0.383481, 0.383481, 1, 1)): [94],
(u'', (0.40118, 0.40118, 1, 1)): [58], (u'', (0.619469, 0.619469, 1, 1)): [5], (u'', (0.289086, 0.289086, 1, 1)): [2], (u'', (0, 0, 1, 1)): [111], (u'', (0.371681, 0.371681, 1, 1)): [114], (u'', (0.0766962, 0.0766962, 1, 1)): [112], (u'', (0.0176991, 0.0176991, 1, 1)): [106], (u'', (0.159292, 0.159292, 1, 1)): [92], (u'', (0.725664, 0.725664, 1, 1)): [121], (u'', (0.348083, 0.348083, 1, 1)): [22], (u'yellow', (1, 1, 0, 1)): [42], (u'', (0.731563, 0.731563, 1, 1)): [129], (u'', (0.613569, 0.613569, 1, 1)): [96], (u'', (0.306785, 0.306785, 1, 1)): [93], (u'', (0.955752, 0.955752, 1, 1)): [74], (u'', (0.20649, 0.20649, 1, 1)): [17], (u'', (0.778761, 0.778761, 1, 1)): [71], (u'', (0.0471976, 0.0471976, 1, 1)): [128], (u'', (0.20059, 0.20059, 1, 1)): [32], (u'', (1, 0.949853, 0.949853, 1)): [65], (u'', (0.430678, 0.430678, 1, 1)): [43], (u'white', (1, 1, 1, 1)): [130], (u'', (0.784661, 0.784661, 1, 1)): [120]})
	viewerInfo = {'cameraAttrs': {'center': (2.052, -0.3535, 0.915), 'fieldOfView': 4.8309680011576, 'nearFar': (27.596963226824, -25.766963226824), 'ortho': False, 'eyeSeparation': 50.8, 'focal': 0.915}, 'viewerAttrs': {'silhouetteColor': None, 'clipping': False, 'showSilhouette': False, 'showShadows': False, 'viewSize': 25.853417325178, 'labelsOnTop': True, 'depthCueRange': (0.5, 1), 'silhouetteWidth': 2, 'singleLayerTransparency': True, 'shadowTextureSize': 2048, 'backgroundImage': [None, 1, 2, 1, 0, 0], 'backgroundGradient': [('Chimera default', [(1, 1, 1, 1), (0, 0, 1, 1)], 1), 1, 0, 0], 'depthCue': True, 'highlight': 0, 'scaleFactor': 1, 'angleDependentTransparency': True, 'backgroundMethod': 0}, 'viewerHL': 131, 'cameraMode': 'mono', 'detail': 1.5, 'viewerFog': None, 'viewerBG': 130}

	replyobj.status("Initializing session restore...", blankAfter=0,
		secondary=True)
	from SimpleSession.versions.v65 import expandSummary
	init(dict(enumerate(expandSummary(colorInfo))))
	replyobj.status("Restoring colors...", blankAfter=0,
		secondary=True)
	restoreColors(colors, materials)
	replyobj.status("Restoring molecules...", blankAfter=0,
		secondary=True)
	restoreMolecules(molInfo, resInfo, atomInfo, bondInfo, crdInfo)
	replyobj.status("Restoring surfaces...", blankAfter=0,
		secondary=True)
	restoreSurfaces(surfInfo)
	replyobj.status("Restoring VRML models...", blankAfter=0,
		secondary=True)
	restoreVRML(vrmlInfo)
	replyobj.status("Restoring pseudobond groups...", blankAfter=0,
		secondary=True)
	restorePseudoBondGroups(pbInfo)
	replyobj.status("Restoring model associations...", blankAfter=0,
		secondary=True)
	restoreModelAssociations(modelAssociations)
	replyobj.status("Restoring camera...", blankAfter=0,
		secondary=True)
	restoreViewer(viewerInfo)

try:
	restoreCoreModels()
except:
	reportRestoreError("Error restoring core models")

	replyobj.status("Restoring extension info...", blankAfter=0,
		secondary=True)


try:
	import StructMeasure
	from StructMeasure.DistMonitor import restoreDistances
	registerAfterModelsCB(restoreDistances, 1)
except:
	reportRestoreError("Error restoring distances in session")


def restoreMidasBase():
	formattedPositions = {}
	import Midas
	Midas.restoreMidasBase(formattedPositions)
try:
	restoreMidasBase()
except:
	reportRestoreError('Error restoring Midas base state')


def restoreMidasText():
	from Midas import midas_text
	midas_text.aliases = {}
	midas_text.userSurfCategories = {}

try:
	restoreMidasText()
except:
	reportRestoreError('Error restoring Midas text state')


def restore_cap_attributes():
 cap_attributes = \
  {
   'cap_attributes': [ ],
   'cap_color': None,
   'cap_offset': 0.01,
   'class': 'Caps_State',
   'default_cap_offset': 0.01,
   'mesh_style': False,
   'shown': True,
   'subdivision_factor': 1.0,
   'version': 1,
  }
 import SurfaceCap.session
 SurfaceCap.session.restore_cap_attributes(cap_attributes)
registerAfterModelsCB(restore_cap_attributes)


def restore_volume_data():
 volume_data_state = \
  {
   'class': 'Volume_Manager_State',
   'data_and_regions_state': [ ],
   'version': 2,
  }
 from VolumeViewer import session
 session.restore_volume_data_state(volume_data_state)

try:
  restore_volume_data()
except:
  reportRestoreError('Error restoring volume data')

geomData = {'AxisManager': {}, 'CentroidManager': {}, 'PlaneManager': {}}

try:
	from StructMeasure.Geometry import geomManager
	geomManager._restoreSession(geomData)
except:
	reportRestoreError("Error restoring geometry objects in session")


def restoreSession_RibbonStyleEditor():
	import SimpleSession
	import RibbonStyleEditor
	userScalings = []
	userXSections = []
	userResidueClasses = []
	residueData = [(1, ('RibbonStyleWorm', [0.379056]), 'rounded', u'amino acid'), (2, ('RibbonStyleWorm', [0.50295]), 'rounded', u'amino acid'), (3, ('RibbonStyleWorm', [0.482301]), 'rounded', u'amino acid'), (4, ('RibbonStyleWorm', [0.497788]), 'rounded', u'amino acid'), (5, ('RibbonStyleWorm', [0.792035]), 'rounded', u'amino acid'), (6, ('RibbonStyleWorm', [0.647493]), 'rounded', u'amino acid'), (7, ('RibbonStyleWorm', [0.719764]), 'rounded', u'amino acid'), (8, ('RibbonStyleWorm', [0.988201]), 'rounded', u'amino acid'), (9, ('RibbonStyleWorm', [0.946903]), 'rounded', u'amino acid'), (10, ('RibbonStyleWorm', [0.946903]), 'rounded', u'amino acid'), (11, ('RibbonStyleWorm', [0.910767]), 'rounded', u'amino acid'), (12, ('RibbonStyleWorm', [0.89528]), 'rounded', u'amino acid'), (13, ('RibbonStyleWorm', [0.539086]), 'rounded', u'amino acid'), (14, ('RibbonStyleWorm', [0.451327]), 'rounded', u'amino acid'), (15, ('RibbonStyleWorm', [0.394543]), 'rounded', u'amino acid'), (16, ('RibbonStyleWorm', [0.466814]), 'rounded', u'amino acid'), (17, ('RibbonStyleWorm', [0.451327]), 'rounded', u'amino acid'),
(18, ('RibbonStyleWorm', [0.471976]), 'rounded', u'amino acid'), (19, ('RibbonStyleWorm', [0.430678]), 'rounded', u'amino acid'), (20, ('RibbonStyleWorm', [0.533923]), 'rounded', u'amino acid'), (21, ('RibbonStyleWorm', [1.4115]), 'rounded', u'amino acid'), (22, ('RibbonStyleWorm', [1.15855]), 'rounded', u'amino acid'), (23, ('RibbonStyleWorm', [0.699115]), 'rounded', u'amino acid'), (24, ('RibbonStyleWorm', [0.554572]), 'rounded', u'amino acid'), (25, ('RibbonStyleWorm', [0.286136]), 'rounded', u'amino acid'), (26, ('RibbonStyleWorm', [0.306785]), 'rounded', u'amino acid'), (27, ('RibbonStyleWorm', [0.399705]), 'rounded', u'amino acid'), (28, ('RibbonStyleWorm', [0.513274]), 'rounded', u'amino acid'), (29, ('RibbonStyleWorm', [0.466814]), 'rounded', u'amino acid'), (30, ('RibbonStyleWorm', [0.544248]), 'rounded', u'amino acid'), (31, ('RibbonStyleWorm', [0.683628]), 'rounded', u'amino acid'), (32, ('RibbonStyleWorm', [0.652655]), 'rounded', u'amino acid'), (33, ('RibbonStyleWorm', [0.688791]), 'rounded', u'amino acid'), (34, ('RibbonStyleWorm', [0.435841]), 'rounded', u'amino acid'),
(35, ('RibbonStyleWorm', [0.482301]), 'rounded', u'amino acid'), (36, ('RibbonStyleWorm', [0.425516]), 'rounded', u'amino acid'), (37, ('RibbonStyleWorm', [0.471976]), 'rounded', u'amino acid'), (38, ('RibbonStyleWorm', [0.379056]), 'rounded', u'amino acid'), (39, ('RibbonStyleWorm', [0.446165]), 'rounded', u'amino acid'), (40, ('RibbonStyleWorm', [0.740413]), 'rounded', u'amino acid'), (41, ('RibbonStyleWorm', [0.590708]), 'rounded', u'amino acid'), (42, ('RibbonStyleWorm', [0.761062]), 'rounded', u'amino acid'), (43, ('RibbonStyleWorm', [0.745575]), 'rounded', u'amino acid'), (44, ('RibbonStyleWorm', [0.864307]), 'rounded', u'amino acid'), (45, ('RibbonStyleWorm', [0.823009]), 'rounded', u'amino acid'), (46, ('RibbonStyleWorm', [0.606195]), 'rounded', u'amino acid'), (47, ('RibbonStyleWorm', [0.528761]), 'rounded', u'amino acid'), (48, ('RibbonStyleWorm', [0.508112]), 'rounded', u'amino acid'), (49, ('RibbonStyleWorm', [0.430678]), 'rounded', u'amino acid'), (50, ('RibbonStyleWorm', [0.399705]), 'rounded', u'amino acid'), (51, ('RibbonStyleWorm', [0.471976]), 'rounded', u'amino acid'),
(52, ('RibbonStyleWorm', [0.626844]), 'rounded', u'amino acid'), (53, ('RibbonStyleWorm', [0.771386]), 'rounded', u'amino acid'), (54, ('RibbonStyleWorm', [0.693953]), 'rounded', u'amino acid'), (55, ('RibbonStyleWorm', [0.869469]), 'rounded', u'amino acid'), (56, ('RibbonStyleWorm', [1.25147]), 'rounded', u'amino acid'), (57, ('RibbonStyleWorm', [1.12758]), 'rounded', u'amino acid'), (58, ('RibbonStyleWorm', [1.13791]), 'rounded', u'amino acid'), (59, ('RibbonStyleWorm', [0.967552]), 'rounded', u'amino acid'), (60, ('RibbonStyleWorm', [0.993363]), 'rounded', u'amino acid'), (61, ('RibbonStyleWorm', [0.735251]), 'rounded', u'amino acid'), (62, ('RibbonStyleWorm', [0.673304]), 'rounded', u'amino acid'), (63, ('RibbonStyleWorm', [0.64233]), 'rounded', u'amino acid'), (64, ('RibbonStyleWorm', [0.570059]), 'rounded', u'amino acid'), (65, ('RibbonStyleWorm', [0.699115]), 'rounded', u'amino acid'), (66, ('RibbonStyleWorm', [0.564897]), 'rounded', u'amino acid'), (67, ('RibbonStyleWorm', [0.523599]), 'rounded', u'amino acid'), (68, ('RibbonStyleWorm', [0.601032]), 'rounded', u'amino acid'),
(69, ('RibbonStyleWorm', [0.632006]), 'rounded', u'amino acid'), (70, ('RibbonStyleWorm', [0.59587]), 'rounded', u'amino acid'), (71, ('RibbonStyleWorm', [0.601032]), 'rounded', u'amino acid'), (72, ('RibbonStyleWorm', [0.564897]), 'rounded', u'amino acid'), (73, ('RibbonStyleWorm', [0.70944]), 'rounded', u'amino acid'), (74, ('RibbonStyleWorm', [1.25147]), 'rounded', u'amino acid'), (75, ('RibbonStyleWorm', [1.01401]), 'rounded', u'amino acid'), (76, ('RibbonStyleWorm', [0.652655]), 'rounded', u'amino acid'), (77, ('RibbonStyleWorm', [0.678466]), 'rounded', u'amino acid'), (78, ('RibbonStyleWorm', [0.869469]), 'rounded', u'amino acid'), (79, ('RibbonStyleWorm', [1.39086]), 'rounded', u'amino acid'), (80, ('RibbonStyleWorm', [1.16888]), 'rounded', u'amino acid'), (81, ('RibbonStyleWorm', [0.761062]), 'rounded', u'amino acid'), (82, ('RibbonStyleWorm', [0.843658]), 'rounded', u'amino acid'), (83, ('RibbonStyleWorm', [0.606195]), 'rounded', u'amino acid'), (84, ('RibbonStyleWorm', [0.441003]), 'rounded', u'amino acid'), (85, ('RibbonStyleWorm', [0.425516]), 'rounded', u'amino acid'),
(86, ('RibbonStyleWorm', [0.533923]), 'rounded', u'amino acid'), (87, ('RibbonStyleWorm', [0.425516]), 'rounded', u'amino acid'), (88, ('RibbonStyleWorm', [0.559735]), 'rounded', u'amino acid'), (89, ('RibbonStyleWorm', [0.435841]), 'rounded', u'amino acid'), (90, ('RibbonStyleWorm', [0.554572]), 'rounded', u'amino acid'), (91, ('RibbonStyleWorm', [0.580383]), 'rounded', u'amino acid'), (92, ('RibbonStyleWorm', [0.910767]), 'rounded', u'amino acid'), (93, ('RibbonStyleWorm', [0.812684]), 'rounded', u'amino acid'), (94, ('RibbonStyleWorm', [0.931416]), 'rounded', u'amino acid'), (95, ('RibbonStyleWorm', [0.859145]), 'rounded', u'amino acid'), (96, ('RibbonStyleWorm', [0.874631]), 'rounded', u'amino acid'), (97, ('RibbonStyleWorm', [1.08628]), 'rounded', u'amino acid'), (98, ('RibbonStyleWorm', [1.18953]), 'rounded', u'amino acid'), (99, ('RibbonStyleWorm', [0.704277]), 'rounded', u'amino acid'), (100, ('RibbonStyleWorm', [0.528761]), 'rounded', u'amino acid'), (101, ('RibbonStyleWorm', [0.730088]), 'rounded', u'amino acid'), (102, ('RibbonStyleWorm', [0.657817]), 'rounded', u'amino acid'),
(103, ('RibbonStyleWorm', [0.673304]), 'rounded', u'amino acid'), (104, ('RibbonStyleWorm', [0.544248]), 'rounded', u'amino acid'), (105, ('RibbonStyleWorm', [0.580383]), 'rounded', u'amino acid'), (106, ('RibbonStyleWorm', [0.559735]), 'rounded', u'amino acid'), (107, ('RibbonStyleWorm', [0.7559]), 'rounded', u'amino acid'), (108, ('RibbonStyleWorm', [1.04499]), 'rounded', u'amino acid'), (109, ('RibbonStyleWorm', [0.668142]), 'rounded', u'amino acid'), (110, ('RibbonStyleWorm', [0.905605]), 'rounded', u'amino acid'), (111, ('RibbonStyleWorm', [0.879794]), 'rounded', u'amino acid'), (112, ('RibbonStyleWorm', [0.699115]), 'rounded', u'amino acid'), (113, ('RibbonStyleWorm', [0.601032]), 'rounded', u'amino acid'), (114, ('RibbonStyleWorm', [0.606195]), 'rounded', u'amino acid'), (115, ('RibbonStyleWorm', [0.559735]), 'rounded', u'amino acid'), (116, ('RibbonStyleWorm', [0.508112]), 'rounded', u'amino acid'), (117, ('RibbonStyleWorm', [0.286136]), 'rounded', u'amino acid'), (118, ('RibbonStyleWorm', [0.415192]), 'rounded', u'amino acid'), (119, ('RibbonStyleWorm', [0.430678]), 'rounded', u'amino acid'),
(120, ('RibbonStyleWorm', [0.435841]), 'rounded', u'amino acid'), (121, ('RibbonStyleWorm', [0.394543]), 'rounded', u'amino acid'), (122, ('RibbonStyleWorm', [0.471976]), 'rounded', u'amino acid'), (123, ('RibbonStyleWorm', [0.497788]), 'rounded', u'amino acid'), (124, ('RibbonStyleWorm', [0.616519]), 'rounded', u'amino acid'), (125, ('RibbonStyleWorm', [0.812684]), 'rounded', u'amino acid'), (126, ('RibbonStyleWorm', [0.688791]), 'rounded', u'amino acid'), (127, ('RibbonStyleWorm', [1.82965]), 'rounded', u'amino acid'), (128, ('RibbonStyleWorm', [2]), 'rounded', u'amino acid'), (129, ('RibbonStyleWorm', [1.21018]), 'rounded', u'amino acid'), (130, ('RibbonStyleWorm', [0.797198]), 'rounded', u'amino acid'), (131, ('RibbonStyleWorm', [0.606195]), 'rounded', u'amino acid'), (132, ('RibbonStyleWorm', [0.699115]), 'rounded', u'amino acid'), (133, ('RibbonStyleWorm', [0.745575]), 'rounded', u'amino acid'), (134, ('RibbonStyleWorm', [0.699115]), 'rounded', u'amino acid'), (135, ('RibbonStyleWorm', [0.54941]), 'rounded', u'amino acid'), (136, ('RibbonStyleWorm', [0.471976]), 'rounded', u'amino acid'),
(137, ('RibbonStyleWorm', [0.389381]), 'rounded', u'amino acid'), (138, ('RibbonStyleWorm', [0.441003]), 'rounded', u'amino acid'), (139, ('RibbonStyleWorm', [0.652655]), 'rounded', u'amino acid'), (140, ('RibbonStyleWorm', [0.451327]), 'rounded', u'amino acid'), (141, ('RibbonStyleWorm', [0.518437]), 'rounded', u'amino acid'), (142, ('RibbonStyleWorm', [0.539086]), 'rounded', u'amino acid'), (143, ('RibbonStyleWorm', [0.585546]), 'rounded', u'amino acid'), (144, ('RibbonStyleWorm', [0.998525]), 'rounded', u'amino acid'), (145, ('RibbonStyleWorm', [0.786873]), 'rounded', u'amino acid'), (146, ('RibbonStyleWorm', [0.94174]), 'rounded', u'amino acid'), (147, ('RibbonStyleWorm', [0.678466]), 'rounded', u'amino acid'), (148, ('RibbonStyleWorm', [0.673304]), 'rounded', u'amino acid'), (149, ('RibbonStyleWorm', [0.7559]), 'rounded', u'amino acid'), (150, ('RibbonStyleWorm', [0.864307]), 'rounded', u'amino acid'), (151, ('RibbonStyleWorm', [0.70944]), 'rounded', u'amino acid'), (152, ('RibbonStyleWorm', [0.70944]), 'rounded', u'amino acid'), (153, ('RibbonStyleWorm', [0.823009]), 'rounded', u'amino acid'),
(154, ('RibbonStyleWorm', [1.35988]), 'rounded', u'amino acid'), (155, ('RibbonStyleWorm', [1.05531]), 'rounded', u'amino acid'), (156, ('RibbonStyleWorm', [0.740413]), 'rounded', u'amino acid'), (157, ('RibbonStyleWorm', [0.64233]), 'rounded', u'amino acid'), (158, ('RibbonStyleWorm', [1.18953]), 'rounded', u'amino acid'), (159, ('RibbonStyleWorm', [0.626844]), 'rounded', u'amino acid'), (160, ('RibbonStyleWorm', [0.487463]), 'rounded', u'amino acid'), (161, ('RibbonStyleWorm', [0.430678]), 'rounded', u'amino acid'), (162, ('RibbonStyleWorm', [0.441003]), 'rounded', u'amino acid'), (163, ('RibbonStyleWorm', [0.446165]), 'rounded', u'amino acid'), (164, ('RibbonStyleWorm', [0.539086]), 'rounded', u'amino acid'), (165, ('RibbonStyleWorm', [0.621681]), 'rounded', u'amino acid'), (166, ('RibbonStyleWorm', [0.693953]), 'rounded', u'amino acid'), (167, ('RibbonStyleWorm', [0.797198]), 'rounded', u'amino acid'), (168, ('RibbonStyleWorm', [0.544248]), 'rounded', u'amino acid'), (169, ('RibbonStyleWorm', [0.570059]), 'rounded', u'amino acid'), (170, ('RibbonStyleWorm', [0.441003]), 'rounded', u'amino acid'),
(171, ('RibbonStyleWorm', [0.389381]), 'rounded', u'amino acid'), (172, ('RibbonStyleWorm', [0.420354]), 'rounded', u'amino acid'), (173, ('RibbonStyleWorm', [0.477139]), 'rounded', u'amino acid'), (174, ('RibbonStyleWorm', [0.513274]), 'rounded', u'amino acid'), (175, ('RibbonStyleWorm', [0.420354]), 'rounded', u'amino acid'), (176, ('RibbonStyleWorm', [0.373894]), 'rounded', u'amino acid'), (177, ('RibbonStyleWorm', [0.373894]), 'rounded', u'amino acid'), (178, ('RibbonStyleWorm', [0.337758]), 'rounded', u'amino acid'), (179, ('RibbonStyleWorm', [0.291298]), 'rounded', u'amino acid'), (180, ('RibbonStyleWorm', [0.265487]), 'rounded', u'amino acid'), (181, ('RibbonStyleWorm', [0.311947]), 'rounded', u'amino acid'), (182, ('RibbonStyleWorm', [0.394543]), 'rounded', u'amino acid'), (183, ('RibbonStyleWorm', [0.425516]), 'rounded', u'amino acid'), (184, ('RibbonStyleWorm', [1.19985]), 'rounded', u'amino acid'), (185, ('RibbonStyleWorm', [0.890118]), 'rounded', u'amino acid'), (186, ('RibbonStyleWorm', [0.461652]), 'rounded', u'amino acid'), (187, ('RibbonStyleWorm', [0.399705]), 'rounded', u'amino acid'),
(188, ('RibbonStyleWorm', [0.425516]), 'rounded', u'amino acid'), (189, ('RibbonStyleWorm', [0.41003]), 'rounded', u'amino acid'), (190, ('RibbonStyleWorm', [0.25]), 'rounded', u'amino acid'), (191, ('RibbonStyleWorm', [0.317109]), 'rounded', u'amino acid'), (192, ('RibbonStyleWorm', [0.363569]), 'rounded', u'amino acid'), (193, ('RibbonStyleWorm', [0.688791]), 'rounded', u'amino acid'), (194, ('RibbonStyleWorm', [0.601032]), 'rounded', u'amino acid'), (195, ('RibbonStyleWorm', [0.678466]), 'rounded', u'amino acid'), (196, ('RibbonStyleWorm', [0.988201]), 'rounded', u'amino acid'), (197, ('RibbonStyleWorm', [0.518437]), 'rounded', u'amino acid'), (198, ('RibbonStyleWorm', [0.50295]), 'rounded', u'amino acid'), (199, ('RibbonStyleWorm', [0.693953]), 'rounded', u'amino acid'), (200, ('RibbonStyleWorm', [0.792035]), 'rounded', u'amino acid'), (201, ('RibbonStyleWorm', [0.688791]), 'rounded', u'amino acid'), (202, ('RibbonStyleWorm', [0.575221]), 'rounded', u'amino acid'), (203, ('RibbonStyleWorm', [0.508112]), 'rounded', u'amino acid'), (204, ('RibbonStyleWorm', [0.466814]), 'rounded', u'amino acid'),
(205, ('RibbonStyleWorm', [0.384218]), 'rounded', u'amino acid'), (206, ('RibbonStyleWorm', [0.420354]), 'rounded', u'amino acid'), (207, ('RibbonStyleWorm', [0.363569]), 'rounded', u'amino acid'), (208, ('RibbonStyleWorm', [0.435841]), 'rounded', u'amino acid'), (209, ('RibbonStyleWorm', [0.471976]), 'rounded', u'amino acid'), (210, ('RibbonStyleWorm', [0.564897]), 'rounded', u'amino acid'), (211, ('RibbonStyleWorm', [0.724926]), 'rounded', u'amino acid'), (212, ('RibbonStyleWorm', [0.80236]), 'rounded', u'amino acid'), (213, ('RibbonStyleWorm', [0.719764]), 'rounded', u'amino acid'), (214, ('RibbonStyleWorm', [0.900442]), 'rounded', u'amino acid'), (215, ('RibbonStyleWorm', [1.06563]), 'rounded', u'amino acid'), (216, ('RibbonStyleWorm', [0.936578]), 'rounded', u'amino acid'), (217, ('RibbonStyleWorm', [1.08628]), 'rounded', u'amino acid'), (218, ('RibbonStyleWorm', [0.884956]), 'rounded', u'amino acid'), (219, ('RibbonStyleWorm', [1.23083]), 'rounded', u'amino acid'), (220, ('RibbonStyleWorm', [1.4528]), 'rounded', u'amino acid'), (221, ('RibbonStyleWorm', [1.65929]), 'rounded', u'amino acid'),
(222, ('RibbonStyleWorm', [1.66962]), 'rounded', u'amino acid'), (223, ('RibbonStyleWorm', [1.93805]), 'rounded', u'amino acid')]
	flags = RibbonStyleEditor.NucleicDefault1
	SimpleSession.registerAfterModelsCB(RibbonStyleEditor.restoreState,
				(userScalings, userXSections,
				userResidueClasses, residueData, flags))
try:
	restoreSession_RibbonStyleEditor()
except:
	reportRestoreError("Error restoring RibbonStyleEditor state")

trPickle = 'gAJjQW5pbWF0ZS5UcmFuc2l0aW9ucwpUcmFuc2l0aW9ucwpxASmBcQJ9cQMoVQxjdXN0b21fc2NlbmVxBGNBbmltYXRlLlRyYW5zaXRpb24KVHJhbnNpdGlvbgpxBSmBcQZ9cQcoVQZmcmFtZXNxCEsBVQ1kaXNjcmV0ZUZyYW1lcQlLAVUKcHJvcGVydGllc3EKXXELVQNhbGxxDGFVBG5hbWVxDWgEVQRtb2RlcQ5VBmxpbmVhcnEPdWJVCGtleWZyYW1lcRBoBSmBcRF9cRIoaAhLFGgJSwFoCl1xE2gMYWgNaBBoDmgPdWJVBXNjZW5lcRRoBSmBcRV9cRYoaAhLAWgJSwFoCl1xF2gMYWgNaBRoDmgPdWJ1Yi4='
scPickle = 'gAJjQW5pbWF0ZS5TY2VuZXMKU2NlbmVzCnEBKYFxAn1xA1UHbWFwX2lkc3EEfXNiLg=='
kfPickle = 'gAJjQW5pbWF0ZS5LZXlmcmFtZXMKS2V5ZnJhbWVzCnEBKYFxAn1xA1UHZW50cmllc3EEXXEFc2Iu'
def restoreAnimation():
	'A method to unpickle and restore animation objects'
	# Scenes must be unpickled after restoring transitions, because each
	# scene links to a 'scene' transition. Likewise, keyframes must be 
	# unpickled after restoring scenes, because each keyframe links to a scene.
	# The unpickle process is left to the restore* functions, it's 
	# important that it doesn't happen prior to calling those functions.
	import SimpleSession
	from Animate.Session import restoreTransitions
	from Animate.Session import restoreScenes
	from Animate.Session import restoreKeyframes
	SimpleSession.registerAfterModelsCB(restoreTransitions, trPickle)
	SimpleSession.registerAfterModelsCB(restoreScenes, scPickle)
	SimpleSession.registerAfterModelsCB(restoreKeyframes, kfPickle)
try:
	restoreAnimation()
except:
	reportRestoreError('Error in Animate.Session')

def restoreLightController():
	import Lighting
	Lighting._setFromParams({'ratio': 1.25, 'brightness': 1.16, 'material': [30.0, (0.85, 0.85, 0.85), 1.0], 'back': [(0.35740674433659325, 0.6604015517481454, -0.6604015517481455), (1.0, 1.0, 1.0), 0.0], 'mode': 'two-point', 'key': [(-0.35740674433659325, 0.6604015517481454, 0.6604015517481455), (1.0, 1.0, 1.0), 1.0], 'contrast': 0.83, 'fill': [(0.25056280708573153, 0.25056280708573153, 0.9351131265310293), (1.0, 1.0, 1.0), 0.0]})
try:
	restoreLightController()
except:
	reportRestoreError("Error restoring lighting parameters")


def restore_surface_color_mapping():
 try:
  surface_color_state = \
   {
    'class': 'Surface_Colorings_State',
    'coloring_table': {},
    'geometry': None,
    'is_visible': False,
    'version': 2,
   }
  import SurfaceColor.session
  SurfaceColor.session.restore_surface_color_state(surface_color_state)
 except:
  reportRestoreError('Error restoring surface color mapping')

registerAfterModelsCB(restore_surface_color_mapping)


def restoreRemainder():
	from SimpleSession.versions.v65 import restoreWindowSize, \
	     restoreOpenStates, restoreSelections, restoreFontInfo, \
	     restoreOpenModelsAttrs, restoreModelClip, restoreSilhouettes

	curSelIds =  []
	savedSels = []
	openModelsAttrs = { 'cofrMethod': 4 }
	windowSize = (579, 502)
	xformMap = {0: (((0.67478809329138, 0.65279691225826, -0.34426330112034), 2.0213344940399), (-0.015851016521732, 0.04613395398573, 0.056410385404197), True)}
	fontInfo = {'face': ('Sans Serif', 'Normal', 16)}
	clipPlaneInfo = {}
	silhouettes = {0: True, 669: True}

	replyobj.status("Restoring window...", blankAfter=0,
		secondary=True)
	restoreWindowSize(windowSize)
	replyobj.status("Restoring open states...", blankAfter=0,
		secondary=True)
	restoreOpenStates(xformMap)
	replyobj.status("Restoring font info...", blankAfter=0,
		secondary=True)
	restoreFontInfo(fontInfo)
	replyobj.status("Restoring selections...", blankAfter=0,
		secondary=True)
	restoreSelections(curSelIds, savedSels)
	replyobj.status("Restoring openModel attributes...", blankAfter=0,
		secondary=True)
	restoreOpenModelsAttrs(openModelsAttrs)
	replyobj.status("Restoring model clipping...", blankAfter=0,
		secondary=True)
	restoreModelClip(clipPlaneInfo)
	replyobj.status("Restoring per-model silhouettes...", blankAfter=0,
		secondary=True)
	restoreSilhouettes(silhouettes)

	replyobj.status("Restoring remaining extension info...", blankAfter=0,
		secondary=True)
try:
	restoreRemainder()
except:
	reportRestoreError("Error restoring post-model state")
from SimpleSession.versions.v65 import makeAfterModelsCBs
makeAfterModelsCBs()

from SimpleSession.versions.v65 import endRestore
replyobj.status('Finishing restore...', blankAfter=0, secondary=True)
endRestore({})
replyobj.status('', secondary=True)
replyobj.status('Restore finished.')

