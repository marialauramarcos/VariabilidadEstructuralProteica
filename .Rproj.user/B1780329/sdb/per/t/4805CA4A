{
    "contents" : "---\ntitle: \"Estudio variabilidad estructural proteica\"\noutput: html_document\n---\n```{r setup, include = FALSE}\nknitr::opts_chunk$set(warning = FALSE, echo = FALSE, message = FALSE)\n```\n\n```{r}\n# Load library.\nlibrary(flux)\n\n# Source functions.\nsource(\"FUNCTIONS/CalculateGroupsMeansQuantiles.R\")\n\n# Nmodes to analyze.\nnmodes1 = 10 \nnmodes2 = 25\nnmodes3 = 50\n\n# Read files and calculate measures.\n\ndata.dir <- \"DATA\"\nout.dir <- \"OUT\"\n\n# Family.\n\npdbid <- read.csv(file.path(data.dir, paste(family, \"_dataset.csv\", sep = \"\")))$pdbid\nn.exp = length(pdbid)\n\nn.sites.p.1 = read.csv(file.path(out.dir, paste(family, \"_out_m.n.sites.p.ref.csv\", sep = \"\")))$V1[1]\nm.n.sites.p.2 = read.csv(file.path(out.dir, paste(family, \"_out_m.n.sites.p.2.csv\", sep = \"\")))$V1\n\nn.core = read.csv(file.path(out.dir, paste(family, \"_out_m.n.core.csv\", sep = \"\")))$V1[1]\nm.n.aligned = read.csv(file.path(out.dir, paste(family, \"_out_m.n.aligned.csv\", sep = \"\")))$V1\n\nidentity = read.csv(file.path(out.dir, paste(family, \"_out_m.identity.csv\", sep = \"\")))$V1\n\n### natural_selection = FALSE, core = FALSE ####\n\nanalysis.fname.id <- paste(family, \"_mut.model_\", mut.model, \"_naturalSelection_\", \"FALSE\", \"_R0_\", R0, \"_core_\", \"FALSE\", \"_K.analysis_\", K.analysis, sep = \"\")\n  \nm.cF.exp.va = read.csv(file.path(out.dir, paste(analysis.fname.id, \"_out_m.exp.va.csv\", sep = \"\")))[, 1:nmodes3]\ni.m.cF.exp.va = 1/m.cF.exp.va\n\nm.cF.exp.Pn = read.csv(file.path(out.dir, paste(analysis.fname.id, \"_out_m.exp.Pn.csv\", sep = \"\")))[, 1:nmodes3]\nmean.cF.exp.Pn = colMeans(m.cF.exp.Pn)\n\ncF.exp.Pn.quantile1 = matrix(0, ncol = ncol(m.cF.exp.Pn), nrow = 1)\ncF.exp.Pn.quantile2 = matrix(0, ncol = ncol(m.cF.exp.Pn), nrow = 1)\n\nfor (i in (1:ncol(m.cF.exp.Pn))){\n    cF.exp.Pn.quantiles = as.vector(quantile((m.cF.exp.Pn[, i]), probs = c(0.05, 0.95)))\n    cF.exp.Pn.quantile1[1, i] = cF.exp.Pn.quantiles[1]\n    cF.exp.Pn.quantile2[1, i] = cF.exp.Pn.quantiles[2]\n}\n\nm.cF.exp.dr.squarei = read.csv(file.path(out.dir, paste(analysis.fname.id, \"_out_m.exp.dr.squarei.csv\", sep = \"\")))\nm.cF.exp.smooth.dr.squarei = read.csv(file.path(out.dir, paste(analysis.fname.id, \"_out_m.exp.smooth.dr.squarei.csv\", sep = \"\")))\n\ncF.exp.MSDi = colMeans(m.cF.exp.dr.squarei, na.rm = T )\ncF.exp.smooth.MSDi = colMeans(m.cF.exp.smooth.dr.squarei, na.rm = T )\n\ncF.exp.MSD = rowMeans(m.cF.exp.dr.squarei, na.rm = T)\n\nm.cF.exp.Qn = t(apply(m.cF.exp.Pn, 1, cumsum))\nmean.cF.exp.Qn = colMeans(m.cF.exp.Qn)\n\ncF.exp.Qn.quantile1 = matrix(0, ncol = ncol(m.cF.exp.Qn), nrow = 1)\ncF.exp.Qn.quantile2 = matrix(0, ncol = ncol(m.cF.exp.Qn), nrow = 1)\n\nfor (i in (1:ncol(m.cF.exp.Qn))){\n    cF.exp.Qn.quantiles = as.vector(quantile((m.cF.exp.Qn[, i]), probs = c(0.05, 0.95)))\n    cF.exp.Qn.quantile1[1, i] = cF.exp.Qn.quantiles[1]\n    cF.exp.Qn.quantile2[1, i] = cF.exp.Qn.quantiles[2]\n}\n\nfamily.data <- data.frame(pdbid, nsites = m.n.sites.p.2, naligned = m.n.aligned, identity, MSD = cF.exp.MSD)\n\n### Theoretical ###\n\nm.nsF.cF.theo.va = read.csv(file.path(out.dir, paste(analysis.fname.id, \"_out_m.theo.va.csv\", sep = \"\")))[, 1:nmodes3]\ni.m.nsF.cF.theo.va = 1/m.nsF.cF.theo.va\n\nm.nsF.cF.theo.Pn = read.csv(file.path(out.dir, paste(analysis.fname.id, \"_out_m.theo.Pn.csv\", sep = \"\")))[, 1:nmodes3]\nn.mut = nrow(m.nsF.cF.theo.Pn)\n\nm.nsF.cF.theo.dr.squarei = read.csv(file.path(out.dir, paste(analysis.fname.id, \"_out_m.theo.dr.squarei.csv\", sep = \"\")))\nm.nsF.cF.theo.smooth.dr.squarei = read.csv(file.path(out.dir, paste(analysis.fname.id, \"_out_m.theo.smooth.dr.squarei.csv\", sep = \"\")))\nnsF.cF.theo.MSDi = colMeans(m.nsF.cF.theo.dr.squarei, na.rm = T)\nnsF.cF.theo.smooth.MSDi = colMeans(m.nsF.cF.theo.smooth.dr.squarei, na.rm = T)\n\nnsF.cF.theo.MSD = rowMeans(m.nsF.cF.theo.dr.squarei, na.rm = T)\n\nnsF.cF.theo.MSD.group <- CalculateGroupsMeansQuantiles(cbind(nsF.cF.theo.MSD,nsF.cF.theo.MSD), n.exp, n.mut.p)\nmean.nsF.cF.theo.MSD.group <- nsF.cF.theo.MSD.group$mean.group[,1]\n\nm.nsF.cF.theo.Qn = t(apply(m.nsF.cF.theo.Pn, 1, cumsum))\n\n### natural_selection = TRUE, core = FALSE ####\n\nanalysis.fname.id <- paste(family, \"_mut.model_\", mut.model, \"_naturalSelection_\", \"TRUE\", \"_R0_\", R0, \"_core_\", \"FALSE\", \"_K.analysis_\", K.analysis, sep = \"\")\n  \nm.nsT.cF.theo.va = read.csv(file.path(out.dir, paste(analysis.fname.id, \"_out_m.theo.va.csv\", sep = \"\")))[, 1:nmodes3]\ni.m.nsT.cF.theo.va = 1/m.nsT.cF.theo.va\n\nm.nsT.cF.theo.Pn = read.csv(file.path(out.dir, paste(analysis.fname.id, \"_out_m.theo.Pn.csv\", sep = \"\")))[, 1:nmodes3]\nn.mut = nrow(m.nsT.cF.theo.Pn)\n\nm.nsT.cF.theo.dr.squarei = read.csv(file.path(out.dir, paste(analysis.fname.id, \"_out_m.theo.dr.squarei.csv\", sep = \"\")))\nm.nsT.cF.theo.smooth.dr.squarei = read.csv(file.path(out.dir, paste(analysis.fname.id, \"_out_m.theo.smooth.dr.squarei.csv\", sep = \"\")))\nnsT.cF.theo.MSDi = colMeans(m.nsT.cF.theo.dr.squarei, na.rm = T)\nnsT.cF.theo.smooth.MSDi = colMeans(m.nsT.cF.theo.smooth.dr.squarei, na.rm = T)\n\nnsT.cF.theo.MSD = rowMeans(m.nsT.cF.theo.dr.squarei, na.rm = T)\n\nnsT.cF.theo.MSD.group <- CalculateGroupsMeansQuantiles(cbind(nsT.cF.theo.MSD,nsT.cF.theo.MSD), n.exp, n.mut.p)\nmean.nsT.cF.theo.MSD.group <- nsT.cF.theo.MSD.group$mean.group[,1]\n\nm.nsT.cF.theo.Qn = t(apply(m.nsT.cF.theo.Pn, 1, cumsum))\n```\n\n```{r, include = FALSE}\n\n### natural_selection = FALSE, core = TRUE ####\n\nanalysis.fname.id <- paste(family, \"_mut.model_\", mut.model, \"_naturalSelection_\", \"FALSE\", \"_R0_\", R0, \"_core_\", \"TRUE\", \"_K.analysis_\", K.analysis, sep = \"\")\n  \nm.cT.exp.va = read.csv(file.path(out.dir, paste(analysis.fname.id, \"_out_m.exp.va.csv\", sep = \"\")))[, 1:nmodes3]\ni.m.cT.exp.va = 1/m.cT.exp.va\n\nm.cT.exp.Pn = read.csv(file.path(out.dir, paste(analysis.fname.id, \"_out_m.exp.Pn.csv\", sep = \"\")))[, 1:nmodes3]\nmean.cT.exp.Pn = colMeans(m.cT.exp.Pn)\n\ncT.exp.Pn.quantile1 = matrix(0, ncol = ncol(m.cT.exp.Pn), nrow = 1)\ncT.exp.Pn.quantile2 = matrix(0, ncol = ncol(m.cT.exp.Pn), nrow = 1)\n\nfor (i in (1:ncol(m.cT.exp.Pn))){\n    cT.exp.Pn.quantiles <- as.vector(quantile((m.cT.exp.Pn[, i]), probs = c(0.05, 0.95)))\n    cT.exp.Pn.quantile1[1, i] = cT.exp.Pn.quantiles[1]\n    cT.exp.Pn.quantile2[1, i] = cT.exp.Pn.quantiles[2]\n}\n\nm.cT.exp.dr.squarei = read.csv(file.path(out.dir, paste(analysis.fname.id, \"_out_m.exp.dr.squarei.csv\", sep = \"\")))\nm.cT.exp.dr.smooth.squarei = read.csv(file.path(out.dir, paste(analysis.fname.id, \"_out_m.exp.smooth.dr.squarei.csv\", sep = \"\")))\ncT.exp.MSDi = colMeans(m.cT.exp.dr.squarei, na.rm = T )\ncT.exp.smooth.MSDi = colMeans(m.cT.exp.dr.smooth.squarei, na.rm = T )\n\ncT.exp.MSD = rowMeans(m.cT.exp.dr.squarei, na.rm = T)\n\nm.cT.exp.Qn = t(apply(m.cT.exp.Pn, 1, cumsum))\nmean.cT.exp.Qn = colMeans(m.cT.exp.Qn)\n\ncT.exp.Qn.quantile1 = matrix(0, ncol = ncol(m.cT.exp.Qn), nrow = 1)\ncT.exp.Qn.quantile2 = matrix(0, ncol = ncol(m.cT.exp.Qn), nrow = 1)\n\nfor (i in (1:ncol(m.cT.exp.Qn))){\n    cT.exp.Qn.quantiles = as.vector(quantile((m.cT.exp.Qn[, i]), probs = c(0.05, 0.95)))\n    cT.exp.Qn.quantile1[1, i] = cT.exp.Qn.quantiles[1]\n    cT.exp.Qn.quantile2[1, i] = cT.exp.Qn.quantiles[2]\n}\n\n### Theoretical ###\n\nm.nsF.cT.theo.va = read.csv(file.path(out.dir, paste(analysis.fname.id, \"_out_m.theo.va.csv\", sep = \"\")))[, 1:nmodes3]\ni.m.nsF.cT.theo.va = 1/m.nsF.cT.theo.va\n\nm.nsF.cT.theo.Pn = read.csv(file.path(out.dir, paste(analysis.fname.id, \"_out_m.theo.Pn.csv\", sep = \"\")))[, 1:nmodes3]\nn.mut = nrow(m.nsF.cT.theo.Pn)\n\nm.nsF.cT.theo.dr.squarei = read.csv(file.path(out.dir, paste(analysis.fname.id, \"_out_m.theo.dr.squarei.csv\", sep = \"\")))\nm.nsF.cT.theo.smooth.dr.squarei = read.csv(file.path(out.dir, paste(analysis.fname.id, \"_out_m.theo.smooth.dr.squarei.csv\", sep = \"\")))\nnsF.cT.theo.MSDi = colMeans(m.nsF.cT.theo.dr.squarei, na.rm = T)\nnsF.cT.theo.smooth.MSDi = colMeans(m.nsF.cT.theo.smooth.dr.squarei, na.rm = T)\n\nnsF.cT.theo.MSD = rowMeans(m.nsF.cT.theo.dr.squarei, na.rm = T)\nnsF.cT.theo.MSD.group <- CalculateGroupsMeansQuantiles(cbind(nsF.cT.theo.MSD,nsF.cT.theo.MSD), n.exp, n.mut.p)\nmean.nsF.cT.theo.MSD.group <- nsF.cT.theo.MSD.group$mean.group[,1]\n\nm.nsF.cT.theo.Qn = t(apply(m.nsF.cT.theo.Pn, 1, cumsum))\n\n### natural_selection = TRUE, core = TRUE ####\n\nanalysis.fname.id <- paste(family, \"_mut.model_\", mut.model, \"_naturalSelection_\", \"TRUE\", \"_R0_\", R0, \"_core_\", \"TRUE\", \"_K.analysis_\", K.analysis, sep = \"\")\n  \nm.nsT.cT.theo.va = read.csv(file.path(out.dir, paste(analysis.fname.id, \"_out_m.theo.va.csv\", sep = \"\")))[, 1:nmodes3]\ni.m.nsT.cT.theo.va = 1/m.nsT.cT.theo.va\n\nm.nsT.cT.theo.Pn = read.csv(file.path(out.dir, paste(analysis.fname.id, \"_out_m.theo.Pn.csv\", sep = \"\")))[, 1:nmodes3]\nn.mut = nrow(m.nsT.cT.theo.Pn)\n\nm.nsT.cT.theo.dr.squarei = read.csv(file.path(out.dir, paste(analysis.fname.id, \"_out_m.theo.dr.squarei.csv\", sep = \"\")))\nm.nsT.cT.theo.smooth.dr.squarei = read.csv(file.path(out.dir, paste(analysis.fname.id, \"_out_m.theo.dr.squarei.csv\", sep = \"\")))\nnsT.cT.theo.MSDi = colMeans(m.nsT.cT.theo.dr.squarei, na.rm = T)\nnsT.cT.theo.smooth.MSDi = colMeans(m.nsT.cT.theo.smooth.dr.squarei, na.rm = T)\n\nnsT.cT.theo.MSD = rowMeans(m.nsT.cT.theo.dr.squarei, na.rm = T)\n\nnsT.cT.theo.MSD.group <- CalculateGroupsMeansQuantiles(cbind(nsT.cT.theo.MSD,nsT.cT.theo.MSD), n.exp, n.mut.p)\nmean.nsT.cT.theo.MSD.group <- nsT.cT.theo.MSD.group$mean.group[,1]\n\nm.nsT.cT.theo.Qn = t(apply(m.nsT.cT.theo.Pn, 1, cumsum))\n\n```\n\n## Conjuntos de proteinas\n\n### Conjunto teorico\n`r n.mut` mutantes de `r p.ref` (`r n.sites.p.1` sitios) simuladas con el modelo mutacional `r mut.model` con ANM *R0* = `r R0` y *Fmax* = 2 (solo para LFENM). \n\nCon seleccion natural (ns = T): Para seleccionar cuales sitios mutar, se utilizo el \"stress model\", mediante el cual se asignaron probabilidades de mutacion a cada sitio:\n\nprob.mut.i = 1 - (beta * CN.i).\n\nLuego, se selecciono para mutar, a los sitios con mayores probabilidades de mutacion. El numero de sitios seleccionados fue el numero de sitios mutados o con gaps en cada par de alineamientos\n\nSin seleccion natural (ns = F): para cada par de proteínas se mutaron al azar la cantidad de sitios correspondientes a la identidad secuencial.\n\n### Conjunto experimental \n`r n.exp` proteinas de la familia de `r family`. Las proteinas tienen un promedio de identidad secuencial de `r round(mean(identity))`%. \n\n\nLa caracterizacion del conjunto experimental se muestra a continuacion:\n```{r}\n\nfamily.data\n```\n## Comparaciones\n\n### MSD\n```{r}\n\nlayout(matrix(1:3, 1, 3, byrow = T)) \n\nhist(cF.exp.MSD, main = \"Experimental MSD\", xlab = \"MSD\", col = \"red\")\nhist(nsF.cF.theo.MSD, main = \"Theoretical MSD ns = F\", xlab = \"MSD\", col = \"grey\")\nhist(nsT.cF.theo.MSD, main = \"Theoretical MSD ns = T\", xlab = \"MSD\", col = \"grey\")\n\n```\n\n### MSDi\n```{r, include = F}\n\nlayout(matrix(1:4, 2, 2, byrow = T)) \nplot(rank(nsF.cF.theo.MSDi, na.last = \"keep\"), main = \"MSDi ns = F\", xlab = \"site\", ylab = \"rank MSDi\")\npoints(rank(cF.exp.MSDi, na.last = \"keep\"), col = \"red\")\n\nplot(rank(nsT.cF.theo.MSDi, na.last = \"keep\"), main = \"MSDi ns = T\", xlab = \"site\", ylab = \"rank MSDi\")\npoints(rank(cF.exp.MSDi, na.last = \"keep\"), col = \"red\")\n\nplot(rank(nsF.cF.theo.smooth.MSDi, na.last = \"keep\"), main = \"MSDi.smooth ns = F\", xlab = \"site\", ylab = \"rank MSDi\")\npoints(rank(cF.exp.smooth.MSDi, na.last = \"keep\"), col = \"red\")\n\nplot(rank(nsT.cF.theo.smooth.MSDi, na.last = \"keep\"), main = \"MSDi.smooth ns = T\", xlab = \"site\", ylab = \"rank MSDi\")\npoints(rank(cF.exp.smooth.MSDi, na.last = \"keep\"), col = \"red\")\n\n```\nLos perfiles teoricos de MSDi y smooth.MSDi fueron fiteados con los perfiles exterimentales. Se compararon y se calcularon R^2 y MSE. \n```{r}\nkeep.data = c()\n\nlayout(matrix(1:4, 2, 2, byrow = F)) \n\nfit.nsF.cF = lm(cF.exp.MSDi ~ nsF.cF.theo.MSDi)\nMSDi.fit.nsF.cF = fitted.values(fit.nsF.cF)\nR2.nsF.cF = cor(cF.exp.MSDi[!is.na(cF.exp.MSDi)], MSDi.fit.nsF.cF) ^ 2 \nMSE.nsF.cF = mean((MSDi.fit.nsF.cF - cF.exp.MSDi[!is.na(cF.exp.MSDi)]) ^ 2)\n\nkeep.data = c(keep.data, R2.nsF.cF, MSE.nsF.cF)\n\nplot(MSDi.fit.nsF.cF, main = \"MSDi ns = F\", xlab = \"site\", ylab = \"MSDi\", ylim = c(0, max(cbind(MSDi.fit.nsF.cF, cF.exp.MSDi[!is.na(cF.exp.MSDi)]))))\npoints(cF.exp.MSDi[!is.na(cF.exp.MSDi)], col = \"red\")\n\nplot(MSDi.fit.nsF.cF, cF.exp.MSDi[!is.na(cF.exp.MSDi)], xlab = \"MSDi teorico\", ylab = \"MSDi experimental\", main = \"ns = F c = F\")\nabline(0, 1)\nlegend(\"topleft\", paste(\"R^2\", round(R2.nsF.cF, digits = 2)), bty = \"n\", text.col = \"red\")\nlegend(\"bottomright\", paste(\"MSE\", signif(MSE.nsF.cF, digits = T)), bty = \"n\", text.col = \"red\")\n\nfit.nsT.cF = lm(cF.exp.MSDi ~ nsT.cF.theo.MSDi)\nMSDi.fit.nsT.cF = fitted.values(fit.nsT.cF)\nR2.nsT.cF = cor(cF.exp.MSDi[!is.na(cF.exp.MSDi)], MSDi.fit.nsT.cF) ^ 2 \nMSE.nsT.cF = mean((MSDi.fit.nsT.cF - cF.exp.MSDi[!is.na(cF.exp.MSDi)]) ^ 2)\n\nkeep.data = c(keep.data, R2.nsT.cF, MSE.nsT.cF)\n\nplot(MSDi.fit.nsT.cF, main = \"MSDi ns = T\", xlab = \"site\", ylab = \"MSDi\", ylim = c(0, max(cbind(MSDi.fit.nsT.cF, cF.exp.MSDi[!is.na(cF.exp.MSDi)]))))\npoints(cF.exp.MSDi[!is.na(cF.exp.MSDi)], col = \"red\")\n\nplot(MSDi.fit.nsT.cF, cF.exp.MSDi[!is.na(cF.exp.MSDi)], xlab = \"MSDi teorico\", ylab = \"MSDi experimental\", main = \"ns = T c = F\")\nabline(0, 1)\nlegend(\"topleft\", paste(\"R^2\", round(R2.nsT.cF, digits = 2)), bty = \"n\", text.col = \"red\")\nlegend(\"bottomright\", paste(\"MSE\", signif(MSE.nsT.cF, digits = 2)), bty = \"n\", text.col = \"red\")\n```\n\n```{r}\nlayout(matrix(1:4, 2, 2, byrow = F)) \n\nfit.nsF.cF = lm(cF.exp.smooth.MSDi ~ nsF.cF.theo.smooth.MSDi)\nMSDi.fit.nsF.cF = fitted.values(fit.nsF.cF)\nR2.nsF.cF = cor(cF.exp.smooth.MSDi[!is.na(cF.exp.smooth.MSDi)], MSDi.fit.nsF.cF) ^ 2 \nMSE.nsF.cF = mean((MSDi.fit.nsF.cF - cF.exp.smooth.MSDi[!is.na(cF.exp.smooth.MSDi)]) ^ 2)\n\nkeep.data = c(keep.data, R2.nsF.cF, MSE.nsF.cF)\n\nplot(MSDi.fit.nsF.cF, main = \"smooth.MSDi ns = F\", xlab = \"site\", ylab = \"MSDi\", ylim = c(0, max(cbind(MSDi.fit.nsF.cF, cF.exp.smooth.MSDi[!is.na(cF.exp.smooth.MSDi)])))) \npoints(cF.exp.smooth.MSDi[!is.na(cF.exp.smooth.MSDi)], col = \"red\")\n\nplot(MSDi.fit.nsF.cF, cF.exp.smooth.MSDi[!is.na(cF.exp.smooth.MSDi)], xlab = \"MSDi.smooth teorico\", ylab = \"MSDi.smooth experimental\", main = \"ns = F c = F\")\nabline(0, 1)\nlegend(\"topleft\", paste(\"R^2\", round(R2.nsF.cF, digits = 2)), bty = \"n\", text.col = \"red\")\nlegend(\"bottomright\", paste(\"MSE\", signif(MSE.nsF.cF, digits = T)), bty = \"n\", text.col = \"red\")\n\nfit.nsT.cF = lm(cF.exp.smooth.MSDi ~ nsT.cF.theo.smooth.MSDi)\nMSDi.fit.nsT.cF = fitted.values(fit.nsT.cF)\nR2.nsT.cF = cor(cF.exp.smooth.MSDi[!is.na(cF.exp.smooth.MSDi)], MSDi.fit.nsT.cF) ^ 2 \nMSE.nsT.cF = mean((MSDi.fit.nsT.cF - cF.exp.smooth.MSDi[!is.na(cF.exp.smooth.MSDi)]) ^ 2)\n\nkeep.data = c(keep.data, R2.nsT.cF, MSE.nsT.cF)\n\nplot(MSDi.fit.nsT.cF, main = \"smooth.MSDi ns = T\", xlab = \"site\", ylab = \"MSDi\", ylim = c(0, max(cbind(MSDi.fit.nsT.cF, cF.exp.smooth.MSDi[!is.na(cF.exp.smooth.MSDi)])))) \npoints(cF.exp.smooth.MSDi[!is.na(cF.exp.smooth.MSDi)], col = \"red\")\n\nplot(MSDi.fit.nsT.cF, cF.exp.smooth.MSDi[!is.na(cF.exp.smooth.MSDi)], xlab = \"MSDi.smooth teorico\", ylab = \"MSDi.smooth experimental\", main = \"ns = T c = F\")\nabline(0, 1)\nlegend(\"topleft\", paste(\"R^2\", round(R2.nsT.cF, digits = 2)), bty = \"n\", text.col = \"red\")\nlegend(\"bottomright\", paste(\"MSE\", signif(MSE.nsT.cF, digits = 2)), bty = \"n\", text.col = \"red\")\n\n```\n\nrojo: experimental\nnegro: teorico\n\n## Pn y Qn\nLas distribuciones de *Pn* y *Qn* de los conjuntos son las siguientes:\n  \n```{r}\n# Re-ordenate Pn.\nm.theo.index = matrix(ncol = 1, nrow = n.mut)\nfor (P in (1:n.exp)) {\n  for (mut in (1:n.mut.p)) {\n    m.theo.index[(P - 1) * n.mut.p + mut, ] = ((mut - 1) * 10 + P)\n  }\n}\nm.nsF.cF.theo.Pn = m.nsF.cF.theo.Pn[as.vector(m.theo.index), ]\nm.nsT.cF.theo.Pn = m.nsT.cF.theo.Pn[as.vector(m.theo.index), ]\nm.nsF.cT.theo.Pn = m.nsF.cT.theo.Pn[as.vector(m.theo.index), ]\nm.nsT.cT.theo.Pn = m.nsT.cT.theo.Pn[as.vector(m.theo.index), ]\n\n# Calculate groups, means and quantiles.\nnsF.cF.theo.Pn.group = CalculateGroupsMeansQuantiles(m.nsF.cF.theo.Pn, n.mut.p, n.exp)\nmean.nsF.cF.theo.Pn.group = nsF.cF.theo.Pn.group$mean.mean.group\nnsF.cF.theo.Pn.group.quantile1 = nsF.cF.theo.Pn.group$mean.quantile1.group\nnsF.cF.theo.Pn.group.quantile2 = nsF.cF.theo.Pn.group$mean.quantile2.group\n\nnsT.cF.theo.Pn.group = CalculateGroupsMeansQuantiles(m.nsT.cF.theo.Pn, n.mut.p, n.exp)\nmean.nsT.cF.theo.Pn.group = nsT.cF.theo.Pn.group$mean.mean.group\nnsT.cF.theo.Pn.group.quantile1 = nsT.cF.theo.Pn.group$mean.quantile1.group\nnsT.cF.theo.Pn.group.quantile2 = nsT.cF.theo.Pn.group$mean.quantile2.group\n```\n\n```{r, inlude = FALSE}\n\nnsF.cT.theo.Pn.group = CalculateGroupsMeansQuantiles(m.nsF.cT.theo.Pn, n.mut.p, n.exp)\nmean.nsF.cT.theo.Pn.group = nsF.cT.theo.Pn.group$mean.mean.group\nnsF.cT.theo.Pn.group.quantile1 = nsF.cT.theo.Pn.group$mean.quantile1.group\nnsF.cT.theo.Pn.group.quantile2 = nsF.cT.theo.Pn.group$mean.quantile2.group\n\nnsT.cT.theo.Pn.group = CalculateGroupsMeansQuantiles(m.nsT.cT.theo.Pn, n.mut.p, n.exp)\nmean.nsT.cT.theo.Pn.group = nsT.cT.theo.Pn.group$mean.mean.group\nnsT.cT.theo.Pn.group.quantile1 = nsT.cT.theo.Pn.group$mean.quantile1.group\nnsT.cT.theo.Pn.group.quantile2 = nsT.cT.theo.Pn.group$mean.quantile2.group\n```\n\n```{r, inlude = FALSE}\n\nnsF.cF.theo.Qn.group = CalculateGroupsMeansQuantiles(m.nsF.cF.theo.Qn, n.mut.p, n.exp)\nmean.nsF.cF.theo.Qn.group = nsF.cF.theo.Qn.group$mean.mean.group\nnsF.cF.theo.Qn.group.quantile1 = nsF.cF.theo.Qn.group$mean.quantile1.group\nnsF.cF.theo.Qn.group.quantile2 = nsF.cF.theo.Qn.group$mean.quantile2.group\n\nnsT.cF.theo.Qn.group = CalculateGroupsMeansQuantiles(m.nsT.cF.theo.Qn, n.mut.p, n.exp)\nmean.nsT.cF.theo.Qn.group = nsT.cF.theo.Qn.group$mean.mean.group\nnsT.cF.theo.Qn.group.quantile1 = nsT.cF.theo.Qn.group$mean.quantile1.group\nnsT.cF.theo.Qn.group.quantile2 = nsT.cF.theo.Qn.group$mean.quantile2.group\n\nnsF.cT.theo.Qn.group = CalculateGroupsMeansQuantiles(m.nsF.cT.theo.Qn, n.mut.p, n.exp)\nmean.nsF.cT.theo.Qn.group = nsF.cT.theo.Qn.group$mean.mean.group\nnsF.cT.theo.Qn.group.quantile1 = nsF.cT.theo.Qn.group$mean.quantile1.group\nnsF.cT.theo.Qn.group.quantile2 = nsF.cT.theo.Qn.group$mean.quantile2.group\n\nnsT.cT.theo.Qn.group = CalculateGroupsMeansQuantiles(m.nsT.cT.theo.Qn, n.mut.p, n.exp)\nmean.nsT.cT.theo.Qn.group = nsT.cT.theo.Qn.group$mean.mean.group\nnsT.cT.theo.Qn.group.quantile1 = nsT.cT.theo.Qn.group$mean.quantile1.group\nnsT.cT.theo.Qn.group.quantile2 = nsT.cT.theo.Qn.group$mean.quantile2.group\n```\n\n```{r}\n\n# Graphics.\n\nlayout(matrix(1:2, 1, 2, byrow = T)) \n\nplot(mean.nsF.cF.theo.Pn.group, \n     main = \"Pn promedio ns = F\", \n     xlab = \"nmodo\",\n     ylab = \"Pn\",\n     ylim = c(0, max(c(nsF.cF.theo.Pn.group.quantile2, mean.cF.exp.Pn))))\nlines(nsF.cF.theo.Pn.group.quantile1)\nlines(nsF.cF.theo.Pn.group.quantile2)\npoints(mean.cF.exp.Pn, col = \"red\")\nlines(as.vector(cF.exp.Pn.quantile1), col = \"red\")\nlines(as.vector(cF.exp.Pn.quantile2), col = \"red\")\n\nplot(mean.nsT.cF.theo.Pn.group, \n     main = \"Pn promedio ns = T\", \n     xlab = \"nmodo\",\n     ylab = \"Pn\",\n     ylim = c(0, max(c(nsT.cF.theo.Pn.group.quantile2, mean.cF.exp.Pn))))\nlines(nsT.cF.theo.Pn.group.quantile1)\nlines(nsT.cF.theo.Pn.group.quantile2)\npoints(mean.cF.exp.Pn, col = \"red\")\nlines(as.vector(cF.exp.Pn.quantile1), col = \"red\")\nlines(as.vector(cF.exp.Pn.quantile2), col = \"red\")\n\n```\n\n*Negro*: Puntos: promedio de promedios teorico. Lineas: promedio de cuantiles 0.05 y 0.95 de `r n.mut.p` grupos de `r n.exp` mutantes teoricas.\n*Rojo*: Experimental. Puntos: promedio. Lineas: cuantiles 0.05 y 0.95.\n\nPosteriormente, los perfiles de Pn teoricos fueron fiteados con los perfiles exterimentales. Se compararon y se calcularon R^2 y MSE. \n\n```{r}\nlayout(matrix(1:2, 1, 2, byrow = T)) \n\nfit.nsF.cF = lm(mean.cF.exp.Pn ~ mean.nsF.cF.theo.Pn.group)\nPn.fit.nsF.cF = fitted.values(fit.nsF.cF)\nR2.nsF.cF = cor(mean.cF.exp.Pn, Pn.fit.nsF.cF) ^ 2 \nMSE.nsF.cF = mean((Pn.fit.nsF.cF - mean.cF.exp.Pn) ^ 2)\nplot(Pn.fit.nsF.cF, mean.cF.exp.Pn, xlab = \"Pn teorico\", ylab = \"Pn experimental\", main = \"ns = F c = F\")\nabline(0, 1)\nlegend(\"topleft\", paste(\"R^2\", round(R2.nsF.cF, digits = 2)), bty = \"n\", text.col = \"red\")\nlegend(\"bottomright\", paste(\"MSE\", signif(MSE.nsF.cF, digits = 2)), bty = \"n\", text.col = \"red\")\n\nkeep.data = c(keep.data, R2.nsF.cF, MSE.nsF.cF)\n\nfit.nsT.cF = lm(mean.cF.exp.Pn ~ mean.nsT.cF.theo.Pn.group)\nPn.fit.nsT.cF = fitted.values(fit.nsT.cF)\nR2.nsT.cF = cor(mean.cF.exp.Pn, Pn.fit.nsT.cF) ^ 2 \nMSE.nsT.cF = mean((Pn.fit.nsT.cF - mean.cF.exp.Pn) ^ 2)\nplot(Pn.fit.nsT.cF, mean.cF.exp.Pn, xlab = \"Pn teorico\", ylab = \"Pn experimental\", main = \"ns = T c = F\")\nabline(0, 1)\nlegend(\"topleft\", paste(\"R^2\", round(R2.nsT.cF, digits = 2)), bty = \"n\", text.col = \"red\")\nlegend(\"bottomright\", paste(\"MSE\", signif(MSE.nsT.cF, digits = 2)), bty = \"n\", text.col = \"red\")\n\nkeep.data = c(keep.data, R2.nsT.cF, MSE.nsT.cF)\n\nwrite.csv(keep.data, file = \"cor_MSE.csv\", appen = TRUE)\n```\n\n```{r}\n# Calculate rho.\nnsF.cF.rho.t.1 <- matrix(0, nrow = n.mut, ncol = 1)\nnsF.cF.rho.t.3 <- matrix(0, nrow = n.mut, ncol = 1)\nfor (i in (1:n.mut)) {\n  nsF.cF.rho.t.1[i, ] <- cor(as.numeric(m.nsF.cF.theo.Pn[i, 1:nmodes1] * m.nsF.cF.theo.va[i, 1:nmodes1]), as.numeric(i.m.nsF.cF.theo.va[i, 1:nmodes1]), method = \"pearson\")\n  \n  nsF.cF.rho.t.3[i, ] <- cor(as.numeric(m.nsF.cF.theo.Pn[i, 1:nmodes3] * m.nsF.cF.theo.va[i, 1:nmodes3]), as.numeric(i.m.nsF.cF.theo.va[i, 1:nmodes3]), method = \"pearson\")\t\n}\n\nnsT.cF.rho.t.1 <- matrix(0, nrow = n.mut, ncol = 1)\nnsT.cF.rho.t.3 <- matrix(0, nrow = n.mut, ncol = 1)\nfor (i in (1:n.mut)) {\n  nsT.cF.rho.t.1[i, ] <- cor(as.numeric(m.nsT.cF.theo.Pn[i, 1:nmodes1] * m.nsT.cF.theo.va[i, 1:nmodes1]), as.numeric(i.m.nsT.cF.theo.va[i, 1:nmodes1]), method = \"pearson\")\t\n  nsT.cF.rho.t.3[i, ] <- cor(as.numeric(m.nsT.cF.theo.Pn[i, 1:nmodes3] * m.nsT.cF.theo.va[i, 1:nmodes3]), as.numeric(i.m.nsT.cF.theo.va[i, 1:nmodes3]), method = \"pearson\")\t\n}\n\nnsF.cT.rho.t.1 <- matrix(0, nrow = n.mut, ncol = 1)\nnsF.cT.rho.t.3 <- matrix(0, nrow = n.mut, ncol = 1)\nfor (i in (1:n.mut)) {\n  nsF.cT.rho.t.1[i, ] <- cor(as.numeric(m.nsF.cT.theo.Pn[i, 1:nmodes1] * m.nsF.cT.theo.va[i, 1:nmodes1]), as.numeric(i.m.nsF.cT.theo.va[i, 1:nmodes1]), method = \"pearson\")\t\n  nsF.cT.rho.t.3[i, ] <- cor(as.numeric(m.nsF.cT.theo.Pn[i, 1:nmodes3] * m.nsF.cT.theo.va[i, 1:nmodes3]), as.numeric(i.m.nsF.cT.theo.va[i, 1:nmodes3]), method = \"pearson\")\t\n}\n\nnsT.cT.rho.t.1 <- matrix(0, nrow = n.mut, ncol = 1)\nnsT.cT.rho.t.3 <- matrix(0, nrow = n.mut, ncol = 1)\nfor (i in (1:n.mut)) {\n  nsT.cT.rho.t.1[i, ] <- cor(as.numeric(m.nsT.cT.theo.Pn[i, 1:nmodes1] * m.nsT.cT.theo.va[i, 1:nmodes1]), as.numeric(i.m.nsT.cT.theo.va[i, 1:nmodes1]), method = \"pearson\")\t\n  nsT.cT.rho.t.3[i, ] <- cor(as.numeric(m.nsT.cT.theo.Pn[i, 1:nmodes3] * m.nsT.cT.theo.va[i, 1:nmodes3]), as.numeric(i.m.nsT.cT.theo.va[i, 1:nmodes3]), method = \"pearson\")\t\n}\n\ncF.rho.e.1 <- matrix(0, nrow = n.exp, ncol = 1)\ncF.rho.e.3 <- matrix(0, nrow = n.exp, ncol = 1) \nfor (i in (1:n.exp)) {\n  cF.rho.e.1[i, ] <- cor(as.numeric(m.cF.exp.Pn[i, 1:nmodes1] * m.cF.exp.va[i, 1:nmodes1]), as.numeric(i.m.cF.exp.va[i, 1:nmodes1]), method = \"pearson\")\n  cF.rho.e.3[i, ] <- cor(as.numeric(m.cF.exp.Pn[i, 1:nmodes3] * m.cF.exp.va[i, 1:nmodes3]), as.numeric(i.m.cF.exp.va[i, 1:nmodes3]), method = \"pearson\")\n}\n\ncT.rho.e.1 <- matrix(0, nrow = n.exp, ncol = 1)\ncT.rho.e.3 <- matrix(0, nrow = n.exp, ncol = 1) \nfor (i in (1:n.exp)) {\n  cT.rho.e.1[i, ] <- cor(as.numeric(m.cT.exp.Pn[i, 1:nmodes1] * m.cT.exp.va[i, 1:nmodes1]), as.numeric(i.m.cT.exp.va[i, 1:nmodes1]), method = \"pearson\")\n  cT.rho.e.3[i, ] <- cor(as.numeric(m.cT.exp.Pn[i, 1:nmodes3] * m.cT.exp.va[i, 1:nmodes3]), as.numeric(i.m.cT.exp.va[i, 1:nmodes3]), method = \"pearson\")\n}\n```\n\n```{r, include = FALSE}\n\n# Calculate auc.\nnsF.cF.auc.t.1 <- matrix(0, nrow = n.mut, ncol = 1)\nnsF.cF.auc.t.3 <- matrix(0, nrow = n.mut, ncol = 1)\nfor (i in (1:n.mut)) {\n  nsF.cF.auc.t.1[i, ] <- auc(seq(1:nmodes1), m.nsF.cF.theo.Qn[i,1:nmodes1])\n  nsF.cF.auc.t.3[i, ] <- auc(seq(1:nmodes3), m.nsF.cF.theo.Qn[i,1:nmodes3])\n}\nnsT.cF.auc.t.1 <- matrix(0, nrow = n.mut, ncol = 1)\nnsT.cF.auc.t.3 <- matrix(0, nrow = n.mut, ncol = 1)\nfor (i in (1:n.mut)) {\n  nsT.cF.auc.t.1[i, ] <- auc(seq(1:nmodes1), m.nsT.cF.theo.Qn[i,1:nmodes1])\n  nsT.cF.auc.t.3[i, ] <- auc(seq(1:nmodes3), m.nsT.cF.theo.Qn[i,1:nmodes3])\n}\n\ncF.auc.e.1 <- matrix(0, nrow = n.exp, ncol = 1)\ncF.auc.e.3 <- matrix(0, nrow = n.exp, ncol = 1)\nfor (i in (1:n.exp)) {\n  cF.auc.e.1[i, ] <- auc(seq(1:nmodes1), m.cF.exp.Qn[i, 1:nmodes1])\n  cF.auc.e.3[i, ] <- auc(seq(1:nmodes3), m.cF.exp.Qn[i, 1:nmodes3])\n}\n\nnsF.cT.auc.t.1 <- matrix(0, nrow = n.mut, ncol = 1)\nnsF.cT.auc.t.3 <- matrix(0, nrow = n.mut, ncol = 1)\nfor (i in (1:n.mut)) {\n  nsF.cT.auc.t.1[i, ] <- auc(seq(1:nmodes1), m.nsF.cT.theo.Qn[i,1:nmodes1])\n  nsF.cT.auc.t.3[i, ] <- auc(seq(1:nmodes3), m.nsF.cT.theo.Qn[i,1:nmodes3])\n}\nnsT.cT.auc.t.1 <- matrix(0, nrow = n.mut, ncol = 1)\nnsT.cT.auc.t.3 <- matrix(0, nrow = n.mut, ncol = 1)\nfor (i in (1:n.mut)) {\n  nsT.cT.auc.t.1[i, ] <- auc(seq(1:nmodes1), m.nsT.cT.theo.Qn[i,1:nmodes1])\n  nsT.cT.auc.t.3[i, ] <- auc(seq(1:nmodes3), m.nsT.cT.theo.Qn[i,1:nmodes3])\n}\n\ncT.auc.e.1 <- matrix(0, nrow = n.exp, ncol = 1)\ncT.auc.e.3 <- matrix(0, nrow = n.exp, ncol = 1)\nfor (i in (1:n.exp)) {\n  cT.auc.e.1[i, ] <- auc(seq(1:nmodes1), m.cT.exp.Qn[i, 1:nmodes1])\n  cT.auc.e.3[i, ] <- auc(seq(1:nmodes3), m.cT.exp.Qn[i, 1:nmodes3])\n}\n``` \n\n### RHO\nLas distribuciones de *rho* para cada conjunto se muestran a continuacion \n\n```{r}\nlayout(matrix(1:2, 1, 2, byrow = T))\nplot(density(nsF.cF.rho.t.1), ylab = \"Frecuencia\", xlab = \"rho\", main = \"Histograma rho 10 modos ns = F\")\npoints(x = c(cF.rho.e.1), y = rep(0, n.exp), col = \"red\")\nplot(density(nsT.cF.rho.t.1), ylab = \"Frecuencia\", xlab = \"rho\", main = \"Histograma rho 10 modos ns = T\")\npoints(x = c(cF.rho.e.1), y = rep(0, n.exp), col = \"red\")\n```\n\n```{r, include = FALSE}\nplot(density(nsF.cT.rho.t.1), ylab = \"Frecuencia\", xlab = \"rho\", main = \"Histograma rho 10 modos ns = F, c = T\")\npoints(x = c(cT.rho.e.1), y = rep(0, n.exp), col = \"red\")\nplot(density(nsT.cT.rho.t.1), ylab = \"Frecuencia\", xlab = \"rho\", main = \"Histograma rho 10 modos ns = T, c = T\")\npoints(x = c(cT.rho.e.1), y = rep(0, n.exp), col = \"red\")\n\n```\n\n```{r}\nlayout(matrix(1:2, 1, 2, byrow = T))\nplot(density(nsF.cF.rho.t.3), ylab = \"Frecuencia\", xlab = \"rho\", main = \"Histograma rho 50 modos ns = F\")\npoints(x = c(cF.rho.e.3), y = rep(0, n.exp), col = \"red\")\nplot(density(nsT.cF.rho.t.3), ylab = \"Frecuencia\", xlab = \"rho\", main = \"Histograma rho 50 modos ns = T\")\npoints(x = c(cF.rho.e.3), y = rep(0, n.exp), col = \"red\")\n```\n\n```{r, include = FALSE}\nplot(density(nsF.cT.rho.t.3), ylab = \"Frecuencia\", xlab = \"rho\", main = \"Histograma rho 50 modos ns = F, c = T\")\npoints(x = c(cT.rho.e.3), y = rep(0, n.exp), col = \"red\")\nplot(density(nsT.cT.rho.t.3), ylab = \"Frecuencia\", xlab = \"rho\", main = \"Histograma rho 50 modos ns = T, c = T\")\npoints(x = c(cT.rho.e.3), y = rep(0, n.exp), col = \"red\")\n\n```\n\n```{r, include = FALSE}\nlayout(matrix(1:4, 2, 2, byrow = T))\nplot(density(nsF.cF.auc.t.1), ylab = \"Frecuencia\", xlab = \"auc\", main = \"Histograma auc 10 modos ns = F, c = F\")\npoints(x = c(cF.auc.e.1), y = rep(0, n.exp), col = \"red\")\nplot(density(nsT.cF.auc.t.1), ylab = \"Frecuencia\", xlab = \"auc\", main = \"Histograma auc 10 modos ns = T, c = F\")\npoints(x = c(cF.auc.e.1), y = rep(0, n.exp), col = \"red\")\nplot(density(nsF.cT.auc.t.1), ylab = \"Frecuencia\", xlab = \"auc\", main = \"Histograma auc 10 modos ns = F, c = T\")\npoints(x = c(cT.auc.e.1), y = rep(0, n.exp), col = \"red\")\nplot(density(nsT.cT.auc.t.1), ylab = \"Frecuencia\", xlab = \"auc\", main = \"Histograma auc 10 modos ns = T, c = T\")\npoints(x = c(cT.auc.e.1), y = rep(0, n.exp), col = \"red\")\n\n```\n\n```{r, include = FALSE}\nlayout(matrix(1:4, 2, 2, byrow = T))\nplot(density(nsF.cF.auc.t.3), ylab = \"Frecuencia\", xlab = \"auc\", main = \"Histograma auc 50 modos ns = F, c = F\")\npoints(x = c(cF.auc.e.3), y = rep(0, n.exp), col = \"red\")\nplot(density(nsT.cF.auc.t.3), ylab = \"Frecuencia\", xlab = \"auc\", main = \"Histograma auc 50 modos ns = T, c = F\")\npoints(x = c(cF.auc.e.3), y = rep(0, n.exp), col = \"red\")\nplot(density(nsF.cT.auc.t.3), ylab = \"Frecuencia\", xlab = \"auc\", main = \"Histograma auc 50 modos ns = F, c = T\")\npoints(x = c(cT.auc.e.3), y = rep(0, n.exp), col = \"red\")\nplot(density(nsT.cT.auc.t.3), ylab = \"Frecuencia\", xlab = \"auc\", main = \"Histograma auc 50 modos ns = T, c = T\")\npoints(x = c(cT.auc.e.3), y = rep(0, n.exp), col = \"red\")\n\n```\n\n```{r, include = FALSE}\n\nplot(mean.nsF.cT.theo.Pn.group, \n     main = \"Pn promedio ns = F, C = T\", \n     xlab = \"nmodo\",\n     ylab = \"Pn\",\n     ylim = c(0, max(c(nsF.cT.theo.Pn.group.quantile2, mean.cT.exp.Pn))))\nlines(nsF.cT.theo.Pn.group.quantile1)\nlines(nsF.cT.theo.Pn.group.quantile2)\npoints(mean.cT.exp.Pn, col = \"red\")\nlines(as.vector(cT.exp.Pn.quantile1), col = \"red\")\nlines(as.vector(cT.exp.Pn.quantile2), col = \"red\")\n\nplot(mean.nsT.cT.theo.Pn.group, \n     main = \"Pn promedio ns = T, C = T\", \n     xlab = \"nmodo\",\n     ylab = \"Pn\",\n     ylim = c(0, max(c(nsT.cT.theo.Pn.group.quantile2, mean.cT.exp.Pn))))\nlines(nsT.cT.theo.Pn.group.quantile1)\nlines(nsT.cT.theo.Pn.group.quantile2)\npoints(mean.cT.exp.Pn, col = \"red\")\nlines(as.vector(cT.exp.Pn.quantile1), col = \"red\")\nlines(as.vector(cT.exp.Pn.quantile2), col = \"red\")\n```\n\n```{r, include = FALSE}\n\nlayout(matrix(1:4, 2, 2, byrow = T)) \n\nplot(mean.nsF.cF.theo.Qn.group, \n     main = \"Qn promedio ns = F, C = F\", \n     xlab = \"nmodo\", \n     ylab = \"Qn\",\n     ylim = c(0, max(c(nsF.cF.theo.Qn.group.quantile2, mean.cF.exp.Qn))))\nlines(nsF.cF.theo.Qn.group.quantile1)\nlines(nsF.cF.theo.Qn.group.quantile2)\npoints(mean.cF.exp.Qn, col = \"red\")\nlines(as.vector(cF.exp.Qn.quantile1), col = \"red\")\nlines(as.vector(cF.exp.Qn.quantile2), col = \"red\")\n\nplot(mean.nsT.cF.theo.Qn.group, \n     main = \"Qn promedio ns = T, C = F\", \n     xlab = \"nmodo\",     \n     ylab = \"Qn\",\n     ylim = c(0, max(c(nsT.cF.theo.Qn.group.quantile2, mean.cF.exp.Qn))))\nlines(nsT.cF.theo.Qn.group.quantile1)\nlines(nsT.cF.theo.Qn.group.quantile2)\npoints(mean.cF.exp.Qn, col = \"red\")\nlines(as.vector(cF.exp.Qn.quantile1), col = \"red\")\nlines(as.vector(cF.exp.Qn.quantile2), col = \"red\")\n\nplot(mean.nsF.cT.theo.Qn.group, \n     main = \"Qn promedio ns = F, C = T\", \n     xlab = \"nmodo\",      \n     ylab = \"Qn\",\n     ylim = c(0, max(c(nsF.cT.theo.Qn.group.quantile2, mean.cT.exp.Qn))))\nlines(nsF.cT.theo.Qn.group.quantile1)\nlines(nsF.cT.theo.Qn.group.quantile2)\npoints(mean.cT.exp.Qn, col = \"red\")\nlines(as.vector(cT.exp.Qn.quantile1), col = \"red\")\nlines(as.vector(cT.exp.Qn.quantile2), col = \"red\")\n\nplot(mean.nsT.cT.theo.Qn.group, \n     main = \"Qn promedio ns = T, C = T\", \n     xlab = \"nmodo\",     \n     ylab = \"Qn\",\n     ylim = c(0, max(c(nsT.cT.theo.Qn.group.quantile2, mean.cT.exp.Qn))))\nlines(nsT.cT.theo.Qn.group.quantile1)\nlines(nsT.cT.theo.Qn.group.quantile2)\npoints(mean.cT.exp.Qn, col = \"red\")\nlines(as.vector(cT.exp.Qn.quantile1), col = \"red\")\nlines(as.vector(cT.exp.Qn.quantile2), col = \"red\")\n```\n\n```{r, include = FALSE}\nfit.nsF.cT = lm(mean.cT.exp.Pn ~ mean.nsF.cT.theo.Pn.group)\nPn.fit.nsF.cT = fitted.values(fit.nsF.cT)\nR2.nsF.cT = cor(mean.cT.exp.Pn, Pn.fit.nsF.cT) ^ 2 \nMSE.nsF.cT = mean((Pn.fit.nsF.cT - mean.cT.exp.Pn) ^ 2)\nplot(Pn.fit.nsF.cT, mean.cT.exp.Pn, xlab = \"Pn teorico\", ylab = \"Pn experimental\", main = \"ns = F c = T\")\nabline(0, 1)\nlegend(\"topleft\", paste(\"R^2\", round(R2.nsF.cT, digits = 2)), bty = \"n\", text.col = \"red\") \nlegend(\"bottomright\", paste(\"MSE\", signif(MSE.nsF.cT, digits = 2)), bty = \"n\", text.col = \"red\")\n\nfit.nsT.cT = lm(mean.cT.exp.Pn ~ mean.nsT.cT.theo.Pn.group)\nPn.fit.nsT.cT = fitted.values(fit.nsT.cT)\nR2.nsT.cT = cor(mean.cT.exp.Pn, Pn.fit.nsT.cT) ^ 2 \nMSE.nsT.cT = mean((Pn.fit.nsT.cT - mean.cT.exp.Pn) ^ 2)\nplot(Pn.fit.nsT.cT, mean.cT.exp.Pn, xlab = \"Pn teorico\", ylab = \"Pn experimental\", main = \"ns = T c = T\")\nabline(0, 1)\nlegend(\"topleft\", paste(\"R^2\", round(R2.nsT.cT, digits = 2)), bty = \"n\", text.col = \"red\")\nlegend(\"bottomright\", paste(\"MSE\", signif(MSE.nsT.cT, digits = 2)), bty = \"n\", text.col = \"red\")\n\n```\n\n\n  \n```{r, include = F}\nlayout(matrix(1:4, 2, 2, byrow = T)) \n\nfit.nsF.cF = lm(cF.exp.MSDi ~ nsF.cF.theo.MSDi)\nMSDi.fit.nsF.cF = fitted.values(fit.nsF.cF)\nR2.nsF.cF = cor(rank(cF.exp.MSDi[!is.na(cF.exp.MSDi)]), rank(MSDi.fit.nsF.cF)) ^ 2 \nMSE.nsF.cF = mean((rank(MSDi.fit.nsF.cF - cF.exp.MSDi[!is.na(cF.exp.MSDi)])) ^ 2)\nplot(rank(MSDi.fit.nsF.cF), rank(cF.exp.MSDi[!is.na(cF.exp.MSDi)]), xlab = \"MSDi teorico\", ylab = \"MSDi experimental\", main = \"ns = F c = F\")\nabline(0, 1)\nlegend(\"topleft\", paste(\"R^2\", round(R2.nsF.cF, digits = 2)), bty = \"n\", text.col = \"red\")\nlegend(\"bottomright\", paste(\"MSE\", signif(MSE.nsF.cF, digits = T)), bty = \"n\", text.col = \"red\")\n\nfit.nsT.cF = lm(cF.exp.MSDi ~ nsT.cF.theo.MSDi)\nMSDi.fit.nsT.cF = fitted.values(fit.nsT.cF)\nR2.nsT.cF = cor(rank(cF.exp.MSDi[!is.na(cF.exp.MSDi)]), rank(MSDi.fit.nsT.cF)) ^ 2 \nMSE.nsT.cF = mean((rank(MSDi.fit.nsT.cF) - rank(cF.exp.MSDi[!is.na(cF.exp.MSDi)])) ^ 2)\nplot(rank(MSDi.fit.nsT.cF), rank(cF.exp.MSDi[!is.na(cF.exp.MSDi)]), xlab = \"MSDi teorico\", ylab = \"MSDi experimental\", main = \"ns = T c = F\")\nabline(0, 1)\nlegend(\"topleft\", paste(\"R^2\", round(R2.nsT.cF, digits = 2)), bty = \"n\", text.col = \"red\")\nlegend(\"bottomright\", paste(\"MSE\", signif(MSE.nsT.cF, digits = 2)), bty = \"n\", text.col = \"red\")\n```\n\n```{r, include = FALSE, include = FALSE}\nlayout(matrix(1:4, 2, 2, byrow = T)) \n\nfit.nsF.cF = lm(cF.exp.smooth.MSDi ~ nsF.cF.theo.smooth.MSDi)\nMSDi.fit.nsF.cF = fitted.values(fit.nsF.cF)\nR2.nsF.cF = cor(rank(cF.exp.smooth.MSDi[!is.na(cF.exp.smooth.MSDi)]), rank(MSDi.fit.nsF.cF)) ^ 2 \nMSE.nsF.cF = mean((rank(MSDi.fit.nsF.cF) - rank(cF.exp.smooth.MSDi[!is.na(cF.exp.smooth.MSDi)])) ^ 2)\nplot(rank(MSDi.fit.nsF.cF), rank(cF.exp.smooth.MSDi[!is.na(cF.exp.smooth.MSDi)]), xlab = \"MSDi.smooth teorico\", ylab = \"MSDi.smooth experimental\", main = \"ns = F c = F\")\nabline(0, 1) \nlegend(\"topleft\", paste(\"R^2\", round(R2.nsF.cF, digits = 2)), bty = \"n\", text.col = \"red\")\nlegend(\"bottomright\", paste(\"MSE\", signif(MSE.nsF.cF, digits = T)), bty = \"n\", text.col = \"red\")\n\nfit.nsT.cF = lm(cF.exp.smooth.MSDi ~ nsT.cF.theo.smooth.MSDi)\nMSDi.fit.nsT.cF = fitted.values(fit.nsT.cF)\nR2.nsT.cF = cor(rank(cF.exp.smooth.MSDi[!is.na(cF.exp.smooth.MSDi)]), rank(MSDi.fit.nsT.cF)) ^ 2 \nMSE.nsT.cF = mean((rank(MSDi.fit.nsT.cF) - rank(cF.exp.smooth.MSDi[!is.na(cF.exp.smooth.MSDi)])) ^ 2)\nplot(rank(MSDi.fit.nsT.cF), rank(cF.exp.smooth.MSDi[!is.na(cF.exp.smooth.MSDi)]), xlab = \"MSDi.smooth teorico\", ylab = \"MSDi.smooth experimental\", main = \"ns = T c = F\")\nabline(0, 1)\nlegend(\"topleft\", paste(\"R^2\", round(R2.nsT.cF, digits = 2)), bty = \"n\", text.col = \"red\")\nlegend(\"bottomright\", paste(\"MSE\", signif(MSE.nsT.cF, digits = 2)), bty = \"n\", text.col = \"red\")\n\n```\n  \n  \n```{r, include = FALSE}\n\nfit.nsF.cT = lm(cT.exp.MSDi ~ nsF.cT.theo.MSDi)\nMSDi.fit.nsF.cT = fitted.values(fit.nsF.cT)\nR2.nsF.cT = cor(cT.exp.MSDi[!is.na(cT.exp.MSDi)], MSDi.fit.nsF.cT) ^ 2 \nMSE.nsF.cT = mean((MSDi.fit.nsF.cT - cT.exp.MSDi[!is.na(cT.exp.MSDi)]) ^ 2)\nplot(MSDi.fit.nsF.cT, cT.exp.MSDi[!is.na(cT.exp.MSDi)], xlab = \"MSDi teorico\", ylab = \"MSDi experimental\", main = \"ns = F c = T\")\nabline(0, 1)\nlegend(\"topleft\", paste(\"R^2\", round(R2.nsF.cT, digits = 2)), bty = \"n\", text.col = \"red\")\nlegend(\"bottomright\", paste(\"MSE\", signif(MSE.nsF.cT, digits = 2)), bty = \"n\", text.col = \"red\")\n\nfit.nsT.cT = lm(cT.exp.MSDi ~ nsT.cT.theo.MSDi)\nMSDi.fit.nsT.cT = fitted.values(fit.nsT.cT)\nR2.nsT.cT = cor(cT.exp.MSDi[!is.na(cT.exp.MSDi)], MSDi.fit.nsT.cT) ^ 2 \nMSE.nsT.cT = mean((MSDi.fit.nsT.cT - cT.exp.MSDi[!is.na(cT.exp.MSDi)]) ^ 2)\nplot(MSDi.fit.nsT.cT, cT.exp.MSDi[!is.na(cT.exp.MSDi)], xlab = \"MSDi teorico\", ylab = \"MSDi experimental\", main = \"ns = T c = T\")\nabline(0, 1)\nlegend(\"topleft\", paste(\"R^2\", round(R2.nsT.cT, digits = 2)), bty = \"n\", text.col = \"red\")\nlegend(\"bottomright\", paste(\"MSE\", signif(MSE.nsT.cT, digits = 2)), bty = \"n\", text.col = \"red\")\n```\n\n```{r, include = FALSE}\nfit.nsF.cT = lm(cT.exp.smooth.MSDi ~ nsF.cT.theo.smooth.MSDi)\nMSDi.fit.nsF.cT = fitted.values(fit.nsF.cT)\nR2.nsF.cT = cor(cT.exp.smooth.MSDi[!is.na(cT.exp.smooth.MSDi)], MSDi.fit.nsF.cT) ^ 2 \nMSE.nsF.cT = mean((MSDi.fit.nsF.cT - cT.exp.smooth.MSDi[!is.na(cT.exp.smooth.MSDi)]) ^ 2)\nplot(MSDi.fit.nsF.cT, cT.exp.smooth.MSDi[!is.na(cT.exp.smooth.MSDi)], xlab = \"MSDi.smooth teorico\", ylab = \"MSDi.smooth experimental\", main = \"ns = F c = T\")\nabline(0, 1)\nlegend(\"topleft\", paste(\"R^2\", round(R2.nsF.cT, digits = 2)), bty = \"n\", text.col = \"red\")\nlegend(\"bottomright\", paste(\"MSE\", signif(MSE.nsF.cT, digits = 2)), bty = \"n\", text.col = \"red\")\n\nfit.nsT.cT = lm(cT.exp.smooth.MSDi ~ nsT.cT.theo.smooth.MSDi)\nMSDi.fit.nsT.cT = fitted.values(fit.nsT.cT)\nR2.nsT.cT = cor(cT.exp.smooth.MSDi[!is.na(cT.exp.smooth.MSDi)], MSDi.fit.nsT.cT) ^ 2 \nMSE.nsT.cT = mean((MSDi.fit.nsT.cT - cT.exp.smooth.MSDi[!is.na(cT.exp.smooth.MSDi)]) ^ 2)\nplot(MSDi.fit.nsT.cT, cT.exp.smooth.MSDi[!is.na(cT.exp.smooth.MSDi)], xlab = \"MSDi.smooth teorico\", ylab = \"MSDi.smooth experimental\", main = \"ns = T c = T\")\nabline(0, 1)\nlegend(\"topleft\", paste(\"R^2\", round(R2.nsT.cT, digits = 2)), bty = \"n\", text.col = \"red\")\nlegend(\"bottomright\", paste(\"MSE\", signif(MSE.nsT.cT, digits = 2)), bty = \"n\", text.col = \"red\")\n```",
    "created" : 1458238328499.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1344687837",
    "id" : "4805CA4A",
    "lastKnownWriteTime" : 1458503580,
    "path" : "C:/Users/Laurita/Desktop/Doctorado/VariabilidadEstructuralProteica/MultipleReport.Rmd",
    "project_path" : "MultipleReport.Rmd",
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "type" : "r_markdown"
}