{
    "contents" : "# INFORMACIÓN:\n#\n# El programa calcula medidas de variabilidad estructural y dinámica de alineamientos múltiples de \n# familias de proteínas provenientes de la base de datos de alineamientos múltiples \"Homstrad\".\n#\n# Para utilizar el programa se debe completar un input (\"DATA/Experimental/inputE.csv\") especificando: \n# -family:la familia de proteínas del alineamiento, que puede ser \"SerinProteases\", \"Globins\" o \"Plastocyanins\"\n# -p.ref: la proteína de referncia que se desee utilizar, teniendo en cuenta que la misma debe ser escrita de \n# la misma forma en la que se encuentra en el dataset de la familia correspondiente \n# (ej:\"DATA/Experimental/SerinProteasesDataset.csv\").\n# -heme: solo se utiliza para la familia de las globinas, puede ser \"TRUE\" o \"FALSE\", dependiendo de si \n# se desea o no considerar al grupo HEMO. \n# -model: el modelo de red elástica a usar, que solo puede ser \"ANM\" por el momento.\n# -R0: cut-off del ANM.\n\n#Remove objects#\nrm(list = ls())\n\n#Read input#\ndata.dir <- \"DATA/Experimental\"\n\ninput.dir <- file.path(data.dir,\"InputE.csv\")\ninput <- read.csv(input.dir)\n\n#Reference family and protein#\nfamily <- input$family\np.ref <- input$p.ref \nheme = input$heme\n\n#ENM#\nmodel <- input$model\nR0 = input$R0\n\n#Files dir#\nalign.dir <- file.path(data.dir,paste(family,\"Alignments.txt\",sep=\"\")) #File with a multiple sequence alignmet#\npdbs.dir <- file.path(data.dir,paste(family,\"Coordinates.pdb\",sep=\"\")) #Coordinates of the proteins# \ndataset.dir <- file.path(data.dir,paste(family,\"Dataset.csv\",sep=\"\")) #Dataset with pdbids and chains# \n\n#Functions dir#\nf.readCA <-\"FUNCTIONS/ReadCA.R\" \nf.readHeme <- \"FUNCTIONS/ReadHeme.R\"  \nf.alignment <- \"FUNCTIONS/Alignment.R\" \nf.ID <- \"FUNCTIONS/ID.R\" \nf.Keff <- \"FUNCTIONS/Keff.R\"  \nf.K <- \"FUNCTIONS/K.R\"  \nf.kij.function <- file.path(\"FUNCTIONS\",paste(\"Kij.\",model,\".R\",sep = \"\")) \nf.variability <- \"FUNCTIONS/Variability.R\" \n\n#Output dir#\nOUT <- \"OUT/Experimental\"\n\n#General parameters#\nTOLERANCE = 1e-10 \n\n#Load Librarys#\nlibrary(seqinr) \nlibrary(bio3d) \n\n#Load Functions#\nsource(f.readCA) \nsource(f.readHeme) \nsource(f.alignment)\nsource(f.ID)\nsource(f.Keff)\nsource(f.K)\nsource(f.kij.function)\nsource(f.variability)\n\n#Read Dataset#\nDataset <- read.csv(dataset.dir)\npdbids <- Dataset$pdbid\nchains <- Dataset$chain\nnprot = length(pdbids)\n\n#Read multiple alignment#\nalignments.id <- read.fasta(align.dir)\nalignments <- alignments.id$ali[,-ncol(alignments.id$ali)]\n\n#Read PDB & alignment of p.ref#\nchain.p.ref <- chains[pdbids == as.character(p.ref)]\npdb.p.ref <- readCA(pdbs.dir,chain.p.ref)\nr.p.ref = pdb.p.ref$xyz.calpha\nnsites.p.ref = pdb.p.ref$nsites \nnaa.p.ref = nsites.p.ref #naa = n.aminoaids, nsites = n.aminoácids + n.atoms we want to consider, ej.: Ns and Fe from heme group in Globins# \n\nif ((family == \"Globins\") & (heme == \"TRUE\")){\n  r.heme.p.ref = readHeme(pdbs.dir,chain.p.ref)\n  r.p.ref = cbind(r.p.ref,r.heme.p.ref)\n  nsites.p.ref = ncol(r.p.ref)\n}\n\nalignment.p.ref <- alignments[alignments.id$id == as.character(p.ref),]\n\n#Variability#\nm.lalign = matrix(ncol = 1 , nrow = nprot)\nm.ID = matrix(ncol = 1 , nrow = nprot)\nm.nH = matrix(ncol = 3*naa.p.ref , nrow = nprot)\nm.Pn = matrix(ncol = 3*naa.p.ref , nrow = nprot)\nm.evalues = matrix(ncol = 3*naa.p.ref , nrow = nprot)\nm.d.evalues = matrix(ncol = 3*naa.p.ref , nrow = nprot)\nm.dr.squarei = matrix(ncol = naa.p.ref , nrow = nprot)\n\nfor (P in (1:nprot)){\n  \n\t#Read PDB & alignment of p.2#\n\tchain.p.2 <- chains[[P]]\n\tpdb.p.2 <- readCA(pdbs.dir,chain.p.2)\n\tr.p.2 <- pdb.p.2$xyz.calpha\n\tnsites.p.2 <- pdb.p.2$nsites\n\tnaa.p.2 = nsites.p.2\n\t\n\tif ((family == \"Globins\") & (heme == \"TRUE\")){\n\t  r.heme.p.2 = readHeme(pdbs.dir,chain.p.2)\n\t  r.p.2 = cbind(r.p.2,r.heme.p.2)\n\t  nsites.p.2 = ncol(r.p.2)\n\t}\n\n\talignment.p.2 <- alignments[alignments.id$id == as.character(pdbids[P]),]\t\n\t\n\t#Analyze alignment of p.ref#\n\ta.align.p.ref <- alignment(alignment.p.ref,alignment.p.2,naa.p.ref)\n\talign.p.ref.index <- a.align.p.ref$align.index\n\tnalign <- a.align.p.ref$nalign\n\tr.align.p.ref <- r.p.ref[,align.p.ref.index]\n\tno.align.p.ref.index <- a.align.p.ref$no.align.index\n\t\n\tif ((family == \"Globins\") & (heme == \"TRUE\")){\n\t  no.align.p.ref.index <- cbind(no.align.p.ref.index,t(seq((naa.p.ref+1),nsites.p.ref)))\n\t}\n\t\n\t#Cakculate KEFF p.ref#\n\tKeff.p.ref <- keff(r.p.ref,align.p.ref.index,no.align.p.ref.index,kij.function,R0,TOLERANCE)\t\n\tnmodes <- length(Keff.p.ref$va)\n\t\n\t#Calculate %ID between P.ref y p.2#\n\tID.p.2 <- ID(alignment.p.ref,alignment.p.2)\n\t\n\t#Analyze alignment of p.2#\n\ta.align.p.2 <- alignment(alignment.p.2,alignment.p.ref,naa.p.2)\n\talign.p.2.index <- a.align.p.2$align.index\n\tno.align.p.2.index <- a.align.p.2$no.align.index\n\t\n\tif ((family == \"Globins\") & (heme == \"TRUE\")){\n\t  no.align.p.2.index <- cbind(no.align.p.2.index,t(seq((naa.p.2+1),nsites.p.2)))\n\t}\n\t\n\t#Rotate p.2 minimizing RMSD with P.ref#\n\talign.p.ref.index3N = matrix(0 , ncol = 3*nalign, nrow = 1)\n\talign.p.2.index3N = matrix(0 , ncol = 3*nalign, nrow = 1)\n  for (i in (1: nalign)){\n    align.p.ref.index3N[1,((3*i-2):(3*i))] = c((3*align.p.ref.index[i]-2),(3*align.p.ref.index[i]-1),(3*align.p.ref.index[i]))\n    align.p.2.index3N[1,((3*i-2):(3*i))] = c((3*align.p.2.index[i]-2),(3*align.p.2.index[i]-1),(3*align.p.2.index[i]))\n  }\n\n\tr.p.2 <- matrix(fit.xyz(fixed = as.vector(r.p.ref),\n\tmobile = as.vector(r.p.2),\n\tfixed.inds = align.p.ref.index3N,\n  mobile.inds = align.p.2.index3N\n\t),nrow=3)\n\t\n\tr.align.p.2 <- r.p.2[,align.p.2.index]\n\t\n\t#Cakculate KEFF p.2#\t\n\tKeff.p.2 <- keff(r.p.2,align.p.2.index,no.align.p.2.index,kij.function,R0,TOLERANCE)\t\n\t\n\t#dr#\t\n\tdr = r.align.p.2 - r.align.p.ref\n\n\t#Variability#\n\tVA <- variability(dr,Keff.p.ref,Keff.p.2)\n\tm.ID[P] = ID.p.2\n  m.lalign[P] = nalign \n  m.nH[P,1:nmodes] = t(VA$nH)\n  m.Pn[P,1:nmodes] = t(VA$Pn)\n  m.d.evalues[P,1:nmodes]  = t(VA$d.evalues[1:nmodes])\n\tm.evalues[P,1:nmodes]  = t(Keff.p.ref$va[1:nmodes])\n\tdr.squarei = rbind(VA$dr.squarei,align.p.ref.index)\n\tfor (i in (1:naa.p.ref)){\n\t\tm.dr.squarei[P,i]= matrix(dr.squarei[1,dr.squarei[2,]==i],ncol=1,nrow=1)\n\t}\n}\n\nP.index = (pdbids != as.character(p.ref))\n\nm.ID <- m.ID[P.index,]\nm.lalign <- m.lalign[P.index,]\nm.nH <- m.nH[P.index,]\nm.Pn <- m.Pn[P.index,]\nm.d.evalues <- m.d.evalues[P.index,]\nm.evalues <- m.evalues[P.index,]\nm.dr.squarei <- m.dr.squarei[P.index,]\n\n#Calculate means#\nmean.nH = colMeans(m.nH,na.rm=T)\nmean.Pn = colMeans(m.Pn,na.rm=T)\nmean.d.evalues= colMeans(m.d.evalues,na.rm=T)\nmean.evalues= colMeans(m.evalues,na.rm=T)\nMSDi = colMeans(m.dr.squarei,na.rm = T)\nMSD = rowMeans(m.dr.squarei,na.rm = T)\n\n#SAVE INFORMATION#\nif (family == \"Globins\") family <- paste(family,\"Heme\",heme,sep =\"\")\n\n#Dataframes#\nwrite.csv(m.lalign,file = file.path(OUT , paste(family , \".Out.m.lalign.csv\" , sep = \"\")) , row.names = FALSE)\nwrite.csv(m.ID,file = file.path(OUT, paste(family , \".Out.m.ID.csv\" , sep = \"\")) , row.names = FALSE)\nwrite.csv(m.nH,file = file.path(OUT , paste(family , \".Out.m.nH.csv\" , sep = \"\")) , row.names = FALSE)\nwrite.csv(m.Pn,file = file.path(OUT , paste(family , \".Out.m.Pn.csv\" , sep=\"\")) , row.names = FALSE)\nwrite.csv(m.d.evalues,file = file.path(OUT , paste(family , \".Out.m.d.evalues.csv\" , sep = \"\")) , row.names = FALSE)\nwrite.csv(m.evalues,file = file.path(OUT , paste(family , \".Out.m.evalues.csv\" , sep = \"\")), row.names = FALSE)\nwrite.csv(m.dr.squarei,file = file.path(OUT , paste(family , \".Out.m.dr.squarei.csv\" , sep = \"\")) , row.names = FALSE)\n\n#Means#\nwrite.csv(mean.nH,file = file.path(OUT , paste(family , \".Out.nH.mean.csv\" , sep = \"\")) , row.names = FALSE)\nwrite.csv(mean.Pn,file = file.path(OUT , paste(family , \".Out.Pn.mean.csv\" , sep = \"\")) , row.names = FALSE)\nwrite.csv(mean.d.evalues,file = file.path(OUT , paste(family , \".Out.d.evalues.mean.csv\" , sep = \"\")) , row.names = FALSE)\nwrite.csv(mean.evalues,file = file.path(OUT , paste(family , \".Out.evalues.mean.csv\" , sep = \"\")) , row.names = FALSE)\nwrite.csv(MSDi,file = file.path(OUT , paste(family , \".Out.MSDi.csv\" , sep = \"\")) , row.names = FALSE)\nwrite.csv(MSD,file = file.path(OUT , paste(family , \".Out.MSD.csv\", sep = \"\")) , row.names = FALSE)\n\n#input#\nwrite.csv(input,file = file.path(OUT , paste(family , \".Input\" , sep = \"\")) , row.names = FALSE)\n",
    "created" : 1444140453870.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2160830425",
    "id" : "AED78BA",
    "lastKnownWriteTime" : 1444140821,
    "path" : "C:/Users/Laurita/Desktop/Doctorado/VariabilidadEstructuralProteica/ExperimentalMain.R",
    "project_path" : "ExperimentalMain.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}