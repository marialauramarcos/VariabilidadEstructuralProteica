siteComparison.mut = melt(tdri2.mut, id.vars = c("site.info"), variable.name = "protein", value.name = "dri2")
siteComparison.medium = melt(tdri2.medium, id.vars = c("site.info"), variable.name = "protein", value.name = "dri2")
# bluild the data.frame
siteComparison.all.datasets = rbind(data.frame("dataset" = "exp", siteComparison.exp),
data.frame("dataset" = "mut", siteComparison.mut),
data.frame("dataset" = "medium", siteComparison.medium))
siteComparison.all.datasets = ddply(siteComparison.all.datasets, c("dataset", "protein"), mutate,
"n.SD" = dri2/mean(dri2, na.rm = T),
"z.SD" = vscale(dri2),
"RSD" = sqrt(dri2),
"n.RSD" = RSD/mean(RSD, na.rm = T),
"z.RSD" = vscale(RSD))
dat = siteComparison.all.datasets
dat$dataset = revalue(dat$dataset, c("medium" = "selection"))
dat$dataset = revalue(dat$dataset, c("mut" = "no-selection"))
## dat with means and standard errors
d.CA = ddply(dat,c("dataset", "site.info"), function(x) {
mean.z.RSD = mean(x$z.RSD, na.rm = T)
ndata = sum(!is.na(x$z.RSD))
se.z.RSD = sd(x$z.RSD, na.rm = T) / sqrt(ndata)
data.frame(mean.z.RSD, ndata, se.z.RSD)
})
data.dir <- paste("OUT/out_subset_CM_ANM", sep = "")
R0 = R0.CM
# set input filenames
## profiles to compare
dri2.exp.fname = file.path(data.dir, paste(family, "_R0_", R0, "_beta_no.sel_K.analysis_Keff_out_m.exp.norm.dr.squarei.csv", sep = ""))
dri2.medium.fname = file.path(data.dir, paste(family, "_R0_", R0, "_beta_medium.sel_K.analysis_Keff_out_m.theo.norm.dr.squarei.csv", sep = ""))
dri2.mut.fname = file.path(data.dir,paste(family, "_R0_", R0, "_beta_no.sel_K.analysis_Keff_out_m.theo.norm.dr.squarei.csv", sep = ""))
## consurf
score.fname = file.path(data.dir, paste(p.ref, "_consurf.csv", sep = ""))
CM.sim.data.mut.fname = file.path(data.dir, paste(family, "_R0_", R0, "_beta_no.sel_out_df.data.csv", sep = ""))
CM.sim.data.medium.sel.fname = file.path(data.dir, paste(family, "_R0_", R0, "_beta_medium.sel_out_df.data.csv", sep = ""))
# read data
dri2.exp = read.csv(dri2.exp.fname, header = T)
dri2.mut = read.csv(dri2.mut.fname, header = T)
dri2.medium = read.csv(dri2.medium.fname, header = T)
rownames(dri2.exp) = paste("mut", rownames(dri2.exp), sep = "")
rownames(dri2.mut) = paste("mut", rownames(dri2.mut), sep = "")
rownames(dri2.medium) = paste("mut", rownames(dri2.medium), sep = "")
tdri2.exp = as.data.frame(t(as.matrix(dri2.exp)))
tdri2.mut = as.data.frame(t(as.matrix(dri2.mut)))
tdri2.medium = as.data.frame(t(as.matrix(dri2.medium)))
site.info = seq(1:length(dri2.mut))
tdri2.exp = cbind(site.info, tdri2.exp)
tdri2.mut = cbind(site.info, tdri2.mut)
tdri2.medium = cbind(site.info, tdri2.medium)
siteComparison.exp = melt(tdri2.exp, id.vars = c("site.info"), variable.name = "protein", value.name = "dri2")
siteComparison.mut = melt(tdri2.mut, id.vars = c("site.info"), variable.name = "protein", value.name = "dri2")
siteComparison.medium = melt(tdri2.medium, id.vars = c("site.info"), variable.name = "protein", value.name = "dri2")
# bluild the data.frame
siteComparison.all.datasets = rbind(data.frame("dataset" = "exp", siteComparison.exp),
data.frame("dataset" = "mut", siteComparison.mut),
data.frame("dataset" = "medium", siteComparison.medium))
siteComparison.all.datasets = ddply(siteComparison.all.datasets, c("dataset", "protein"), mutate,
"n.SD" = dri2/mean(dri2, na.rm = T),
"z.SD" = vscale(dri2),
"RSD" = sqrt(dri2),
"n.RSD" = RSD/mean(RSD, na.rm = T),
"z.RSD" = vscale(RSD))
dat = siteComparison.all.datasets
dat$dataset = revalue(dat$dataset, c("medium" = "selection"))
dat$dataset = revalue(dat$dataset, c("mut" = "no-selection"))
## dat with means and standard errors
d.CM = ddply(dat,c("dataset", "site.info"), function(x) {
mean.z.RSD = mean(x$z.RSD, na.rm = T)
ndata = sum(!is.na(x$z.RSD))
se.z.RSD = sd(x$z.RSD, na.rm = T) / sqrt(ndata)
data.frame(mean.z.RSD, ndata, se.z.RSD)
})
# CA
d = d.CA
print(d.CA[1,1:5])
d = d.CA
d.CA[1,1:5]
d[1,1:5]
d = d.CM
d[1,1:5]
# calculate correlations berween profiles
d.exp = subset(d, dataset == "exp")
d.mut = subset(d, dataset == "no-selection")
d.medium = subset(d, dataset == "selection")
d.exp
data.dir <- paste("OUT/out_subset_CM_ANM", sep = "")
R0 = R0.CM
# set input filenames
## profiles to compare
dri2.exp.fname = file.path(data.dir, paste(family, "_R0_", R0, "_beta_no.sel_K.analysis_Keff_out_m.exp.norm.dr.squarei.csv", sep = ""))
dri2.medium.fname = file.path(data.dir, paste(family, "_R0_", R0, "_beta_medium.sel_K.analysis_Keff_out_m.theo.norm.dr.squarei.csv", sep = ""))
dri2.mut.fname = file.path(data.dir,paste(family, "_R0_", R0, "_beta_no.sel_K.analysis_Keff_out_m.theo.norm.dr.squarei.csv", sep = ""))
## consurf
score.fname = file.path(data.dir, paste(p.ref, "_consurf.csv", sep = ""))
CM.sim.data.mut.fname = file.path(data.dir, paste(family, "_R0_", R0, "_beta_no.sel_out_df.data.csv", sep = ""))
CM.sim.data.medium.sel.fname = file.path(data.dir, paste(family, "_R0_", R0, "_beta_medium.sel_out_df.data.csv", sep = ""))
dri2.exp = read.csv(dri2.exp.fname, header = T)
dri2.mut = read.csv(dri2.mut.fname, header = T)
dri2.medium = read.csv(dri2.medium.fname, header = T)
rownames(dri2.exp) = paste("mut", rownames(dri2.exp), sep = "")
rownames(dri2.mut) = paste("mut", rownames(dri2.mut), sep = "")
rownames(dri2.medium) = paste("mut", rownames(dri2.medium), sep = "")
tdri2.exp = as.data.frame(t(as.matrix(dri2.exp)))
tdri2.mut = as.data.frame(t(as.matrix(dri2.mut)))
tdri2.medium = as.data.frame(t(as.matrix(dri2.medium)))
site.info = seq(1:length(dri2.mut))
tdri2.exp = cbind(site.info, tdri2.exp)
tdri2.mut = cbind(site.info, tdri2.mut)
tdri2.medium = cbind(site.info, tdri2.medium)
siteComparison.exp = melt(tdri2.exp, id.vars = c("site.info"), variable.name = "protein", value.name = "dri2")
siteComparison.mut = melt(tdri2.mut, id.vars = c("site.info"), variable.name = "protein", value.name = "dri2")
siteComparison.medium = melt(tdri2.medium, id.vars = c("site.info"), variable.name = "protein", value.name = "dri2")
rmarkdown::render('comparison_CA_CM.Rmd',
output_file =  paste("OUT/report_comparison_CA_CM_", family, "_", enm, "_R0_", R0, ".html", sep = ''))
dri2.exp = read.csv(dri2.exp.fname, header = T)
dri2.mut = read.csv(dri2.mut.fname, header = T)
dri2.medium = read.csv(dri2.medium.fname, header = T)
rownames(dri2.exp) = paste("mut", rownames(dri2.exp), sep = "")
rownames(dri2.mut) = paste("mut", rownames(dri2.mut), sep = "")
rownames(dri2.medium) = paste("mut", rownames(dri2.medium), sep = "")
tdri2.exp = as.data.frame(t(as.matrix(dri2.exp)))
tdri2.mut = as.data.frame(t(as.matrix(dri2.mut)))
tdri2.medium = as.data.frame(t(as.matrix(dri2.medium)))
site.info = seq(1:length(dri2.mut))
tdri2.exp = cbind(site.info, tdri2.exp)
tdri2.mut = cbind(site.info, tdri2.mut)
tdri2.medium = cbind(site.info, tdri2.medium)
siteComparison.exp = melt(tdri2.exp, id.vars = c("site.info"), variable.name = "protein", value.name = "dri2")
siteComparison.mut = melt(tdri2.mut, id.vars = c("site.info"), variable.name = "protein", value.name = "dri2")
siteComparison.medium = melt(tdri2.medium, id.vars = c("site.info"), variable.name = "protein", value.name = "dri2")
siteComparison.all.datasets = rbind(data.frame("dataset" = "exp", siteComparison.exp),
data.frame("dataset" = "mut", siteComparison.mut),
data.frame("dataset" = "medium", siteComparison.medium))
siteComparison.all.datasets = ddply(siteComparison.all.datasets, c("dataset", "protein"), mutate,
"n.SD" = dri2/mean(dri2, na.rm = T),
"z.SD" = vscale(dri2),
"RSD" = sqrt(dri2),
"n.RSD" = RSD/mean(RSD, na.rm = T),
"z.RSD" = vscale(RSD))
dat = siteComparison.all.datasets
dat$dataset = revalue(dat$dataset, c("medium" = "selection"))
dat$dataset = revalue(dat$dataset, c("mut" = "no-selection"))
## dat with means and standard errors
d.CA = ddply(dat,c("dataset", "site.info"), function(x) {
mean.z.RSD = mean(x$z.RSD, na.rm = T)
ndata = sum(!is.na(x$z.RSD))
se.z.RSD = sd(x$z.RSD, na.rm = T) / sqrt(ndata)
data.frame(mean.z.RSD, ndata, se.z.RSD)
})
d = d.CA
d.CA[1,1:5]
r.exp.mut = cor(d.exp$mean.z.RSD, d.mut$mean.z.RSD)
r.exp.medium = cor(d.exp$mean.z.RSD, d.medium$mean.z.RSD)
r.mut.medium = cor(d.mut$mean.z.RSD, d.medium$mean.z.RSD)
cor.df = data.frame("comparison CA" = c("exp vs no-selection", "exp vs selection", "no-selection vs selection"),
"R" = c(r.exp.mut, r.exp.medium, r.mut.medium))
cor.df
rmarkdown::render('comparison_CA_CM.Rmd',
output_file =  paste("OUT/report_comparison_CA_CM_", family, "_", enm, "_R0_", R0, ".html", sep = ''))
rmarkdown::render('comparison_CA_CM.Rmd',
output_file =  paste("OUT/report_comparison_CA_CM_", family, "_", enm, "_R0_", R0, ".html", sep = ''))
print(f)
family <- as.character(input$family)[f]
type <- as.character(input$type)[f]
p.ref <- as.character(input$p.ref)[f]
enm <- as.character(input$enm)[f]
n.mut.p <- input$n.mut.p[f]
R0.CA = input$R0.CA[f]
R0.CM = input$R0.CM[f]
chain.p.ref <- as.character(input$chain.p.ref)[f]
print(family)
## correlations
rmarkdown::render('comparison_CA_CM.Rmd',
output_file =  paste("OUT/report_comparison_CA_CM_", family, "_", enm, "_R0_", R0, ".html", sep = ''))
## correlations
rmarkdown::render('comparison_CA_CM.Rmd',
output_file =  paste("OUT/report_comparison_CA_CM_", family, "_", enm, "_R0_", R0, ".html", sep = ''))
# satart a loop for each family
for (f in (1:nrow(input))) {
print(f)
family <- as.character(input$family)[f]
type <- as.character(input$type)[f]
p.ref <- as.character(input$p.ref)[f]
enm <- as.character(input$enm)[f]
n.mut.p <- input$n.mut.p[f]
R0.CA = input$R0.CA[f]
R0.CM = input$R0.CM[f]
chain.p.ref <- as.character(input$chain.p.ref)[f]
print(family)
# generate reports
## correlations
rmarkdown::render('comparison_CA_CM.Rmd',
output_file =  paste("OUT/report_comparison_CA_CM_", family, "_", enm, "_R0_", R0, ".html", sep = ''))
}
f
# set chunk options
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
# load functions
source(file.path(data.dir, "my-functions.R"))
data.dir <- paste("OUT/out_subset_CA_ANM", sep = "")
R0 = R0.CA
# set input filenames
## profiles to compare
dri2.exp.fname = file.path(data.dir, paste(family, "_R0_", R0, "_beta_no.sel_K.analysis_Keff_out_m.exp.norm.dr.squarei.csv", sep = ""))
dri2.medium.fname = file.path(data.dir, paste(family, "_R0_", R0, "_beta_medium.sel_K.analysis_Keff_out_m.theo.norm.dr.squarei.csv", sep = ""))
dri2.mut.fname = file.path(data.dir,paste(family, "_R0_", R0, "_beta_no.sel_K.analysis_Keff_out_m.theo.norm.dr.squarei.csv", sep = ""))
## consurf
score.fname = file.path(data.dir, paste(p.ref, "_consurf.csv", sep = ""))
CA.sim.data.mut.fname = file.path(data.dir, paste(family, "_R0_", R0, "_beta_no.sel_out_df.data.csv", sep = ""))
CA.sim.data.medium.sel.fname = file.path(data.dir, paste(family, "_R0_", R0, "_beta_medium.sel_out_df.data.csv", sep = ""))
# read data
dri2.exp = read.csv(dri2.exp.fname, header = T)
dri2.mut = read.csv(dri2.mut.fname, header = T)
dri2.medium = read.csv(dri2.medium.fname, header = T)
rownames(dri2.exp) = paste("mut", rownames(dri2.exp), sep = "")
rownames(dri2.mut) = paste("mut", rownames(dri2.mut), sep = "")
rownames(dri2.medium) = paste("mut", rownames(dri2.medium), sep = "")
tdri2.exp = as.data.frame(t(as.matrix(dri2.exp)))
tdri2.mut = as.data.frame(t(as.matrix(dri2.mut)))
tdri2.medium = as.data.frame(t(as.matrix(dri2.medium)))
site.info = seq(1:length(dri2.mut))
tdri2.exp = cbind(site.info, tdri2.exp)
tdri2.mut = cbind(site.info, tdri2.mut)
tdri2.medium = cbind(site.info, tdri2.medium)
siteComparison.exp = melt(tdri2.exp, id.vars = c("site.info"), variable.name = "protein", value.name = "dri2")
siteComparison.mut = melt(tdri2.mut, id.vars = c("site.info"), variable.name = "protein", value.name = "dri2")
siteComparison.medium = melt(tdri2.medium, id.vars = c("site.info"), variable.name = "protein", value.name = "dri2")
# bluild the data.frame
siteComparison.all.datasets = rbind(data.frame("dataset" = "exp", siteComparison.exp),
data.frame("dataset" = "mut", siteComparison.mut),
data.frame("dataset" = "medium", siteComparison.medium))
siteComparison.all.datasets = ddply(siteComparison.all.datasets, c("dataset", "protein"), mutate,
"n.SD" = dri2/mean(dri2, na.rm = T),
"z.SD" = vscale(dri2),
"RSD" = sqrt(dri2),
"n.RSD" = RSD/mean(RSD, na.rm = T),
"z.RSD" = vscale(RSD))
dat = siteComparison.all.datasets
dat$dataset = revalue(dat$dataset, c("medium" = "selection"))
dat$dataset = revalue(dat$dataset, c("mut" = "no-selection"))
## dat with means and standard errors
d.CA = ddply(dat,c("dataset", "site.info"), function(x) {
mean.z.RSD = mean(x$z.RSD, na.rm = T)
ndata = sum(!is.na(x$z.RSD))
se.z.RSD = sd(x$z.RSD, na.rm = T) / sqrt(ndata)
data.frame(mean.z.RSD, ndata, se.z.RSD)
})
data.dir <- paste("OUT/out_subset_CM_ANM", sep = "")
R0 = R0.CM
# set input filenames
## profiles to compare
dri2.exp.fname = file.path(data.dir, paste(family, "_R0_", R0, "_beta_no.sel_K.analysis_Keff_out_m.exp.norm.dr.squarei.csv", sep = ""))
dri2.medium.fname = file.path(data.dir, paste(family, "_R0_", R0, "_beta_medium.sel_K.analysis_Keff_out_m.theo.norm.dr.squarei.csv", sep = ""))
dri2.mut.fname = file.path(data.dir,paste(family, "_R0_", R0, "_beta_no.sel_K.analysis_Keff_out_m.theo.norm.dr.squarei.csv", sep = ""))
## consurf
score.fname = file.path(data.dir, paste(p.ref, "_consurf.csv", sep = ""))
CM.sim.data.mut.fname = file.path(data.dir, paste(family, "_R0_", R0, "_beta_no.sel_out_df.data.csv", sep = ""))
CM.sim.data.medium.sel.fname = file.path(data.dir, paste(family, "_R0_", R0, "_beta_medium.sel_out_df.data.csv", sep = ""))
# read data
dri2.exp = read.csv(dri2.exp.fname, header = T)
dri2.mut = read.csv(dri2.mut.fname, header = T)
dri2.medium = read.csv(dri2.medium.fname, header = T)
rownames(dri2.exp) = paste("mut", rownames(dri2.exp), sep = "")
rownames(dri2.mut) = paste("mut", rownames(dri2.mut), sep = "")
rownames(dri2.medium) = paste("mut", rownames(dri2.medium), sep = "")
tdri2.exp = as.data.frame(t(as.matrix(dri2.exp)))
tdri2.mut = as.data.frame(t(as.matrix(dri2.mut)))
tdri2.medium = as.data.frame(t(as.matrix(dri2.medium)))
site.info = seq(1:length(dri2.mut))
tdri2.exp = cbind(site.info, tdri2.exp)
tdri2.mut = cbind(site.info, tdri2.mut)
tdri2.medium = cbind(site.info, tdri2.medium)
siteComparison.exp = melt(tdri2.exp, id.vars = c("site.info"), variable.name = "protein", value.name = "dri2")
siteComparison.mut = melt(tdri2.mut, id.vars = c("site.info"), variable.name = "protein", value.name = "dri2")
siteComparison.medium = melt(tdri2.medium, id.vars = c("site.info"), variable.name = "protein", value.name = "dri2")
# bluild the data.frame
siteComparison.all.datasets = rbind(data.frame("dataset" = "exp", siteComparison.exp),
data.frame("dataset" = "mut", siteComparison.mut),
data.frame("dataset" = "medium", siteComparison.medium))
siteComparison.all.datasets = ddply(siteComparison.all.datasets, c("dataset", "protein"), mutate,
"n.SD" = dri2/mean(dri2, na.rm = T),
"z.SD" = vscale(dri2),
"RSD" = sqrt(dri2),
"n.RSD" = RSD/mean(RSD, na.rm = T),
"z.RSD" = vscale(RSD))
dat = siteComparison.all.datasets
dat$dataset = revalue(dat$dataset, c("medium" = "selection"))
dat$dataset = revalue(dat$dataset, c("mut" = "no-selection"))
## dat with means and standard errors
d.CM = ddply(dat,c("dataset", "site.info"), function(x) {
mean.z.RSD = mean(x$z.RSD, na.rm = T)
ndata = sum(!is.na(x$z.RSD))
se.z.RSD = sd(x$z.RSD, na.rm = T) / sqrt(ndata)
data.frame(mean.z.RSD, ndata, se.z.RSD)
})
# CA
d = d.CA
# calculate correlations berween profiles
d.exp = subset(d, dataset == "exp")
d.mut = subset(d, dataset == "no-selection")
d.medium = subset(d, dataset == "selection")
# calculate cors
r.exp.mut = cor(d.exp$mean.z.RSD, d.mut$mean.z.RSD)
r.exp.medium = cor(d.exp$mean.z.RSD, d.medium$mean.z.RSD)
r.mut.medium = cor(d.mut$mean.z.RSD, d.medium$mean.z.RSD)
cor.df = data.frame("comparison CA" = c("exp vs no-selection", "exp vs selection", "no-selection vs selection"),
"R" = c(r.exp.mut, r.exp.medium, r.mut.medium))
knitr::kable(cor.df, digits = 2, caption = "Correlation between <Z-scores> profiles")
consurf = read.csv(score.fname, sep = ";")
score = consurf$SCORE
# read simulated data
## no sel
CA.sim.data.mut = read.csv(CA.sim.data.mut.fname)
mut.site.mut = CA.sim.data.mut$site
accept.mut = CA.sim.data.mut$accept
## medium sel
CA.sim.data.medium.sel = read.csv(CA.sim.data.medium.sel.fname)
mut.site.medium.sel = CA.sim.data.medium.sel$site
accept.medium.sel = CA.sim.data.medium.sel$accept
# calculate p.accept of simulated data
p.accept.mut = c()
p.accept.medium.sel = c()
# calculate CN
CN.CA = CA.sim.data.mut$CN
CN = c()
for (i in (1:n.sites)) {
CN[i] = CN.CA[which(mut.site.mut == i)][1]
}
for (i in (1:n.sites)) {
accept.mut.i = accept.mut[which(mut.site.mut == i)]
p.accept.mut.i = mean(accept.mut.i)
p.accept.mut[i] = p.accept.mut.i
accept.medium.sel.i = accept.medium.sel[which(mut.site.medium.sel == i)]
p.accept.medium.sel.i = mean(accept.medium.sel.i)
p.accept.medium.sel[i] = p.accept.medium.sel.i
}
## calculate corelations
r.p.accept.mut.CN = cor(p.accept.mut, CN)
r.p.accept.mut.score = cor(p.accept.mut, score)
r.score.CN = cor(score, CN)
cor.df = data.frame("comparison CA" = c("log(paccept no-selection) vs CN", "log(paccept no-selection) vs score", "score vs CN"),
"R" = c(r.p.accept.mut.CN , r.p.accept.mut.score, r.score.CN))
knitr::kable(cor.df, digits = 2, caption = "Correlation between sequence profiles")
print("<paccept no-selection>")
print(mean(p.accept.mut))
## calculate corelations
r.p.accept.medium.sel.CN = cor(log(p.accept.medium.sel), CN)
r.p.accept.medium.sel.score = cor(log(p.accept.medium.sel), score)
r.score.CN = cor(score, CN)
cor.df = data.frame("comparison CA" = c("log(paccept selection) vs CN", "log(paccept selection) vs score", "score vs CN"),
"R" = c(r.p.accept.medium.sel.CN , r.p.accept.medium.sel.score, r.score.CN))
knitr::kable(cor.df, digits = 2, caption = "Correlation between sequence profiles")
print("<paccept selection>")
print(mean(p.accept.medium.sel))
log(p.accept.medium.sel)
CN
length(CN)
length(log(p.accept.medium.sel))
r.p.accept.medium.sel.CN = cor(log(p.accept.medium.sel), CN)
r.p.accept.medium.sel.score = cor(log(p.accept.medium.sel), score)
r.score.CN = cor(score, CN)
length(score)
r.p.accept.mut.CN = cor(p.accept.mut, CN)
r.p.accept.mut.score = cor(p.accept.mut, score)
r.score.CN = cor(score, CN)
p.accept.mut
CA.sim.data.mut.fname
family
CA.sim.data.mut$site
CA.sim.data.mut$accept
CA.sim.data.mut = read.csv(CA.sim.data.mut.fname)
mut.site.mut = CA.sim.data.mut$site
accept.mut = CA.sim.data.mut$accept
## medium sel
CA.sim.data.medium.sel = read.csv(CA.sim.data.medium.sel.fname)
mut.site.medium.sel = CA.sim.data.medium.sel$site
accept.medium.sel = CA.sim.data.medium.sel$accept
p.accept.mut = c()
p.accept.medium.sel = c()
# calculate CN
CN.CA = CA.sim.data.mut$CN
CN = c()
for (i in (1:n.sites)) {
CN[i] = CN.CA[which(mut.site.mut == i)][1]
}
n.sites
rmarkdown::render('comparison_CA_CM.Rmd',
output_file =  paste("OUT/report_comparison_CA_CM_", family, "_", enm, "_R0_", R0, ".html", sep = ''))
f
data.dir
data.dir="OUT"
read.table(file.path(data.dir, "ensayo_moscas.txt"))
read.csv(file.path(data.dir, "ensayo_moscas.txt"))
read.csv(file.path(data.dir, "ensayo_moscas.csv"))
read.csv(file.path(data.dir, "ensayo_moscas.csv", sep=";"))
read.csv(file.path(data.dir, "ensayo_moscas.csv") sep=";")
read.csv(file.path(data.dir, "ensayo_moscas.csv"), sep=";")
read.csv(file.path(data.dir, "ensayo_moscas.csv"), sep=";")[1:24,]
help("t.test")
d=read.csv(file.path(data.dir, "ensayo_moscas.csv"), sep=";")[1:24,]
t.test(d$trat_antes, d$trat_dp, alternative = "t", conf.level = 0.95)
d=d[!is.na(d)]
d
length(d)
d=matrix(d[!is.na(d)], ncol=4)
d
t.test(d[,1], d[,2], alternative = "t", conf.level = 0.95)
d=read.csv(file.path(data.dir, "ensayo_moscas.csv"), sep=";")[1:24,]
d=matrix(d[!is.na(d)], ncol=4)
d
t.test(d[,1], d[,2], alternative = "t", conf.level = 0.95)
d=read.csv(file.path(data.dir, "ensayo_moscas.csv"), sep=";")[1:24,]
t.test(d[,1], d[,2], alternative = "t", conf.level = 0.95)
t.test(d[,1], d[,2], alternative = "g", conf.level = 0.95)
t.test(d[,1], d[,2], alternative = "l", conf.level = 0.95)
plot(d[,1])
points(d[,2], col="red")
plot(d[,3])
points(d[,4], col="red")
t.test(d[,2], d[,4], alternative = "t", conf.level = 0.95)
t.test(d[,2], d[,4], alternative = "l", conf.level = 0.95)
t.test(d[,2], d[,4], alternative = "t", conf.level = 0.95)
t.test(d[,3], d[,4], alternative = "t", conf.level = 0.95)
t.test(d[,3], d[,4], alternative = "l", conf.level = 0.95)
t.test(d[,3], d[,4], alternative = "t", conf.level = 0.95)
which(d[,1]>100)
length(which(d[,1]>100))
length(which(d[,3]>100))
length(which(d[,3]>150))
length(which(d[,1]>150))
length(which(d[,3]>110))
length(which(d[,1]>110))
(d[,1]>110))
(d[,1]>110)
d[(d[,1]>110),1:2]
d.trat[(d[,1]>110),1:2]
d.trat=d[(d[,1]>110),1:2]
d.trat=d[(d[,3]>110),3:4]
d.trat=d[(d[,1]>110),1:2]
d.quim=d[(d[,3]>110),3:4]
mean(d.trat[,1])
mean(d.trat[,1], na.rm=T)
mean(d.trat[,2], na.rm=T)
mean(d.quim[,1], na.rm=T)
mean(d.quim[,2], na.rm=T)
t.test(d.trat[,1], d.trat[,2], alternative = "t", conf.level = 0.95)
t.test(d.quim[,1], d.quim[,2], alternative = "t", conf.level = 0.95)
t.test(d.trat[,2], d.quim[,2], alternative = "t", conf.level = 0.95)
plot(d.trat[,1])
points(d.trat[,2], col="red")
points(d.trat[,2], col="red")
help("plot")
plot(d.trat[,1], xlim=c(0,500))
plot(d.trat[,1], ylim=c(0,500))
max(d.trat[,1])
(d.trat[,1])
plot(d.trat[,1], ylim=c(0,1000))
points(d.trat[,2], col="red")
plot(d.trat[,1], ylim=c(0,1000))
points(d.trat[,2], col="red")
d.trat
plot(d.quim[,1], ylim=c(0,1000))
points(d.quim[,2], col="red")
d=read.csv(file.path(data.dir, "ensayo_moscas.csv"), sep = ";")[1:24,]
d.quim=d[(d[,3]>110),3:4]
d
d=read.csv(file.path(data.dir, "ensayo_moscas.csv"), sep = ";")[1:23,]
d
apply(d,1,mean)
apply(d,2,mean)
d=matrix(d[!is.na(d)], ncol=4)
apply(d,2,mean)
d.trat=d[(d[,1]>110),1:2]
d.quim=d[(d[,3]>110),3:4]
mean = data.frame(apply(d,2,mean))
mean
mean = data.frame(t(apply(d,2,mean))
)
mean
colnames(df.mean) = c("bio_t0", "bio_t1", "bio_t0", "bio_t21")
df.mean = data.frame(t(apply(d,2,mean)))
colnames(df.mean) = c("bio_t0", "bio_t1", "bio_t0", "bio_t21")
df.mean
colnames(df.mean) = c("bio_d0", "bio_d21", "bio_d0", "bio_d21")
df.mean
df.mean = data.frame(t(apply(d,2,mean)),t(apply(d,2,sd)))
colnames(df.mean) = c("bio_d0", "bio_d21", "quim_d0", "quim_d21")
df.mean
df.mean = data.frame(rbind(t(apply(d,2,mean)),t(apply(d,2,sd))))
df.mean
colnames(df.mean) = c("bio_d0", "bio_d21", "quim_d0", "quim_d21")
df.mean
rownames(df.mean) = c("media", "sd")
df.mean
plot(df.mean[1,])
(df.mean[1,])
d
d=cbind(d.trat,d.quim)
df.mean = data.frame(rbind(t(apply(d,2,mean)),t(apply(d,2,sd))))
colnames(df.mean) = c("bio_d0", "bio_d21", "quim_d0", "quim_d21")
rownames(df.mean) = c("media", "sd")
df.mean
t.test(d.trat[,1], d.trat[,2], alternative = "t", conf.level = 0.95)
t.test(d.trat[,1], d.trat[,2], alternative = "l", conf.level = 0.95)
t.test(d.trat[,1], d.trat[,2], alternative = "g", conf.level = 0.95)
t.test(d.trat[,1], d.trat[,2], alternative = "t", conf.level = 0.95)
t.test(d.quim[,1], d.quim[,2], alternative = "t", conf.level = 0.95)
t.test(d.trat[,1], d.quim[,1], alternative = "t", conf.level = 0.95)
t.test(d.trat[,2], d.quim[,2], alternative = "t", conf.level = 0.95)
plot(d.trat[,1], ylim = c(0,1000))
plot(d.trat[,1], ylim = c(0,1000), ylab = "número de moscas", xlab = "índice vaca")
points(d.trat[,2], col ="green")
plot(d.quim[,1], ylim = c(0,1000), ylab = "número de moscas", xlab = "índice vaca")
points(d.quim[,2], col ="red")
