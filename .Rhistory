data.dir <- "Data/"
align.dir <- paste(data.dir,"alignments.txt") #file with a multiple sequence alignment from Homstrad#
align.dir
align.dir <- file.path(data.dir,"alignments.txt") #file with a multiple sequence alignment from Homstrad#
align.dir
align.dir <- file.path(data.dir,"alignments.txt") #file with a multiple sequence alignment from Homstrad#
align.dir
align.dir <- file.path(data.dir,"alignments.txt",sep="") #file with a multiple sequence alignment from Homstrad#
align.dir
data.dir <- "Data"
align.dir <- file.path(data.dir,"alignments.txt",sep="") #
align.dir
align.dir <- file.path(data.dir,"/alignments.txt",sep="") #file with a multiple sequence alignment from Homstrad#
align.dir
f.ref = globin
f.ref = "globin"
align.dir <- file.path(data.dir,f.ref,"alignments.txt",sep="") #file with a multiple sequence alignment from Homstrad#
align.dir
align.dir <- file.path(data.dir,paste(f.ref,"alignments.txt",sep="") #file with a multiple sequence alignment from Homstrad#
)
align.dir
align.dir <- file.path(data.dir,paste(f.ref,"Alignments.txt",sep="")) #file with a multiple sequence alignment from Homstrad#
align.dir
pdbs.dir <- file.path(data.dir,paste(f.ref,"Coordinates.txt",sep="")) #coordinates of the proteins in the alignment#
pdbs.dir
model <- "ANM"
R0 <- 12
f.kij.function <- file.path("FUNCTIONS","kij.",model,".R",sep="")
f.kij.function
f.kij.function <- file.path("FUNCTIONS",paste("kij.",model,".R",sep=""))
f.kij.function
f.readCA <-"FUNCTIONS/readCA.R" #function that reads pdbs#
f.alignment <- "FUNCTIONS/analisis.alineamientos.homstrad" #function that analyzes alignments#
f.kij.function <- file.path("FUNCTIONS",paste("kij.",model,".R",sep=""))
f.Keff.ganm <- "FUNCTIONS/Keff.ganm.R" #function that calculates Keff#
f.ganm <- "FUNCTIONS/ganm.R" #function that calculates ganm#
f.variability <- "FUNCTIONS/Variability.R" #function of variability#
TOLERANCE = 1e-10
rm (list=ls())
#Set working directory#
(WD <- getwd())
if (!is.null(WD)) setwd(WD)
WD
data.dir <- "Data"
input <- file.path(data.dir,"Input.csv",sep=""))
#Read input#
data.dir <- "Data"
input <- file.path(data.dir,"Input.csv",sep="")
input
input <- paste(data.dir,"/Input.csv",sep="")
input
WD
rm (list=ls())
#Set working directory#
(WD <- getwd())
if (!is.null(WD)) setwd(WD)
#Read input#
data.dir <- "Data"
input <- paste(data.dir,"/Input.csv",sep="")
input <- read.csv(input.dir)
input.dir <- paste(data.dir,"/Input.csv",sep="")
input <- read.csv(input.dir)
input
f.ref = input$family
f.ref
p.ref = input$p.ref
p.ref
#Remove objects#
rm (list=ls())
#Set working directory#
(WD <- getwd())
if (!is.null(WD)) setwd(WD)
#Read input#
data.dir <- "Data"
input.dir <- paste(data.dir,"/Input.csv",sep="")
input <- read.csv(input.dir)
f.ref = input$family
p.ref = input$p.ref
model <- input$model
R0 = input$R0
#Directories and files#
align.dir <- file.path(data.dir,paste(f.ref,"Alignments.txt",sep="")) #file with a multiple sequence alignment from Homstrad#
pdbs.dir <- file.path(data.dir,paste(f.ref,"Coordinates.txt",sep=""))
f.readCA <-"FUNCTIONS/readCA.R" #function that reads pdbs#
f.kij.function <- file.path("FUNCTIONS",paste("kij.",model,".R",sep=""))
f.Keff.ganm <- "FUNCTIONS/Keff.ganm.R"  #function that calculates Keff#
f.ganm <- "FUNCTIONS/ganm.R"  #function that calculates ganm#
f.variability <- "FUNCTIONS/Variability.R"  #function of variability#
TOLERANCE = 1e-10
#LIBRARYS#
library(seqinr)
library(bio3d)
#LOAD FUNCTIONS#
source(f.readCA)
source(kij.function)
source(f.Keff.ganm)
source(f.ganm)
source(f.variability)
f.kij.function <- file.path("FUNCTIONS",paste("kij.",model,".R",sep=""))
source(f.kij.function)
f.kij.function <- file.path("FUNCTIONS",paste("kij.",model,".R",sep=""))
model
f.kij.function
paste("kij.",model,".R",sep="")
paste("kij.",model,".R")
model
model<- model[1]
f.kij.function <- file.path("FUNCTIONS",paste("kij.",model,".R"),sep="")
f.kij.function
model <- input$model
model
p.ref = input$p.ref
p.ref
f.kij.function <- file.path("FUNCTIONS",paste("kij.",model,".R",sep=""))
f.kij.function
paste("kij.",model,".R",sep="")
model
paste("kij.",model,".R"
)
model
f.kij.function <- file.path("FUNCTIONS",paste("kij.",as.character(model),".R",sep=""))
f.kij.function
f.kij.function <- file.path("FUNCTIONS",paste("kij.",model,".R",sep=" "))
f.kij.function
f.kij.function <- file.path("FUNCTIONS",paste("kij.",model,".R",sep=""))
f.kij.function
f.kij.function <- file.path("FUNCTIONS",paste("kij.",model,".R"),sep="")
f.kij.function
f.kij.function <- file.path("FUNCTIONS",paste("kij.",model,".R"))
f.kij.function
f.kij.function <- file.path("FUNCTIONS",paste("kij.",model,".R",sep = ""))
f.kij.function
model<- "ANM"
model
f.kij.function <- file.path("FUNCTIONS",paste("kij.",model,".R",sep = ""))
f.kij.function
data.dir <- "Data"
input.dir <- paste(data.dir,"/Input.csv",sep="")
input <- read.csv(input.dir)
f.ref = input$family
p.ref = input$p.ref
model <- input$model
R0 = input$R0
model
f.kij.function <- file.path("FUNCTIONS",paste("kij.",model,".R",sep = ""))
f.kij.function
f.Keff.ganm <- "FUNCTIONS/Keff.ganm.R"  #function that calculates Keff#
f.ganm <- "FUNCTIONS/ganm.R"  #function that calculates ganm#
f.variability <- "FUNCTIONS/Variability.R"  #function of variability#
TOLERANCE = 1e-10
#LIBRARYS#
library(seqinr)
library(bio3d)
#LOAD FUNCTIONS#
source(f.readCA)
source(f.alignment)
source(f.kij.function)
source(f.Keff.ganm)
source(f.ganm)
source(f.variability)
alignments.id <- read.fasta(align.dir)
alignments <- alignments.id$ali[,-ncol(alignments.id$ali)]
nprot <- length(alignments.id$id)
align.dir
#Read input#
data.dir <- "Data"
input.dir <- paste(data.dir,"/Input.csv",sep="")
input <- read.csv(input.dir)
f.ref = input$family
p.ref = input$p.ref
model <- input$model
R0 = input$R0
#Directories and files#
align.dir <- file.path(data.dir,paste(f.ref,"Alignments.txt",sep="")) #file with a multiple sequence alignment from Homstrad#
pdbs.dir <- file.path(data.dir,paste(f.ref,"Coordinates.txt",sep="")) #coordinates of the proteins in the alignment#
dataset.dir <- file.path(data.dir,paste(f.ref,"Dataset.csv",sep="")) #coordinates of the proteins in the alignment#
chains.dir <- file.path(data.dir,paste(f.ref,"Chains.csv",sep="")) #coordinates of the proteins in the alignment#
align.dir
alignments.id <- read.fasta(align.dir)
alignments <- alignments.id$ali[,-ncol(alignments.id$ali)]
nprot <- length(alignments.id$id)
alignments.id <- read.fasta(align.dir)
alignments.id
alignments <- alignments.id$ali[,-ncol(alignments.id$ali)]
alignments
alignments$id
alignments.id$id
data.frame(alignments.id$id)
write.csv(file="Data/GlobinsDataset",data.frame(pdbid = alignments.id$id))
write.csv(file="DATA/GlobinsDataset.csv",data.frame(pdbid = alignments.id$id))
Dataset <- read.csv(dataset.dir)
Dataset
Dataset <- read.csv(dataset.dir)
pdbid <- Dataset.pdbid
chain <- Dataset.chain
pdbid <- Dataset$pdbid
chain <- Dataset$chain
pdbid
chain
rm (list=ls())
#Set working directory#
(WD <- getwd())
if (!is.null(WD)) setwd(WD)
#Read input#
data.dir <- "Data"
input.dir <- paste(data.dir,"/Input.csv",sep="")
input <- read.csv(input.dir)
f.ref = input$family
p.ref = input$p.ref
model <- input$model
R0 = input$R0
#Directories and files#
align.dir <- file.path(data.dir,paste(f.ref,"Alignments.txt",sep="")) #file with a multiple sequence alignment from Homstrad#
pdbs.dir <- file.path(data.dir,paste(f.ref,"Coordinates.txt",sep="")) #coordinates of the proteins in the alignment#
dataset.dir <- file.path(data.dir,paste(f.ref,"Dataset.csv",sep="")) #coordinates of the proteins in the alignment#
#Functions#
f.readCA <-"FUNCTIONS/readCA.R" #function that reads pdbs#
f.alignment <- "FUNCTIONS/analysis.align.homstrad.R" #function that analyzes alignments#
f.kij.function <- file.path("FUNCTIONS",paste("kij.",model,".R",sep = ""))
f.Keff.ganm <- "FUNCTIONS/Keff.ganm.R"  #function that calculates Keff#
f.ganm <- "FUNCTIONS/ganm.R"  #function that calculates ganm#
f.variability <- "FUNCTIONS/Variability.R"  #function of variability#
#General parameters#
TOLERANCE = 1e-10
#LIBRARYS#
library(seqinr)
library(bio3d)
#LOAD FUNCTIONS#
source(f.readCA)
source(f.alignment)
source(f.kij.function)
source(f.Keff.ganm)
source(f.ganm)
source(f.variability)
#READ DATASET AND CHAINS#
Dataset <- read.csv(dataset.dir)
pdbid <- Dataset$pdbid
chain <- Dataset$chain
#READ MULTIPLE ALIGNMENT#
alignments.id <- read.fasta(align.dir)
alignments <- alignments.id$ali[,-ncol(alignments.id$ali)]
nprot <- length(alignments.id$id)
#PDB P1#
chain <- chains[[p.ref]]
pdbP1 <- readCA(pdbs.dir)
xyz.P1 <- pdbP1$xyz.calpha
nsitesP1 <- pdbP1$nsites
alignP1 <- alignments[alignments.id$id==as.character(pdbid[p.ref,1]),]
#VARIABILITY#
df.lalign = matrix(ncol= 1 , nrow = nprot)
df.nH = matrix(ncol= 3*nsitesP1 , nrow = nprot)
df.Pn = matrix(ncol= 3*nsitesP1 , nrow = nprot)
df.evalues = matrix(ncol= 3*nsitesP1 , nrow = nprot)
df.d.evalues = matrix(ncol= 3*nsitesP1 , nrow = nprot)
df.dr.squarei = matrix(ncol = nsitesP1,nrow = nprot)
nprot
chain <- chain[[p.ref]]
pdbP1 <- readCA(pdbs.dir)
xyz.P1 <- pdbP1$xyz.calpha
nsitesP1 <- pdbP1$nsites
pdbs.dir <- file.path(data.dir,paste(f.ref,"Coordinates.txt",sep="")) #coordinates of the proteins in the alignment#
pdbs.dir
pdbs.dir
pdbP1 <- readCA(pdbs.dir)
pdbs.dir <- file.path(data.dir,paste(f.ref,"Coordinates.pdb",sep="")) #coordinates of the proteins in the alignment#
pdbP1 <- readCA(pdbs.dir)
xyz.P1 <- pdbP1$xyz.calpha
nsitesP1 <- pdbP1$nsites
alignP1 <- alignments[alignments.id$id==as.character(pdbid[p.ref,1]),]
alignments.id$id
pdbid
as.character(pdbid[p.ref,1])
pdbid[p.ref]
p.ref
pdbid
alignP1 <- alignments[alignments.id$id==p.ref,]
alignP1
df.lalign = matrix(ncol= 1 , nrow = nprot)
df.nH = matrix(ncol= 3*nsitesP1 , nrow = nprot)
df.Pn = matrix(ncol= 3*nsitesP1 , nrow = nprot)
df.evalues = matrix(ncol= 3*nsitesP1 , nrow = nprot)
df.d.evalues = matrix(ncol= 3*nsitesP1 , nrow = nprot)
df.dr.squarei = matrix(ncol = nsitesP1,nrow = nprot)
P=2
chain <- chains[[P]]
pdbP2 <- readCA(pdbs.dir)
xyz.P2 <- pdbP2$xyz.calpha
nsitesP2 <- pdbP2$nsites
alignP2 <- alignments[alignments.id$id==as.character(pdbid[P]),]
chain <- chain[[P]]
pdbP2 <- readCA(pdbs.dir)
xyz.P2 <- pdbP2$xyz.calpha
nsitesP2 <- pdbP2$nsites
chains <- Dataset$chain
chain <- chains[[P]]
pdbP2 <- readCA(pdbs.dir)
xyz.P2 <- pdbP2$xyz.calpha
nsitesP2 <- pdbP2$nsites
